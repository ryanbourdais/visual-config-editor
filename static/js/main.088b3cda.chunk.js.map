{"version":3,"sources":["state/Hooks.tsx","components/containers/DropdownContainer.tsx","components/panes/EditorPane.tsx","components/panes/NavigationPane.tsx","icons/components/WorkflowIcon.tsx","icons/ui/AddIcon.tsx","components/atoms/AddButton.tsx","icons/ui/ExpandIcon.tsx","components/atoms/Select.tsx","icons/components/CommandIcon.tsx","components/atoms/summaries/CommandSummary.tsx","components/atoms/form/InspectorProperty.tsx","icons/ui/DeleteItemIcon.tsx","icons/ui/DragItemIcon.tsx","components/containers/CollapsibleList.tsx","components/atoms/form/ListProperty.tsx","icons/ui/BreadCrumbArrowIcon.tsx","components/containers/BreadCrumbs.tsx","components/containers/inspector/subtypes/CommandSubtypes.tsx","components/containers/ParamListContainer.tsx","components/menus/TabbedMenu.tsx","components/menus/definitions/StepDefinitionMenu.tsx","components/atoms/form/StepListItem.tsx","components/menus/definitions/subtypes/StepTypePage.tsx","components/menus/SubTypeMenu.tsx","components/containers/inspector/CommandInspector.tsx","components/containers/inspector/subtypes/ParameterSubtypes.tsx","mappings/CommandMapping.tsx","icons/components/ExecutorIcon.tsx","components/atoms/summaries/ExecutorSummary.tsx","components/containers/inspector/subtypes/ExecutorSubtypes.tsx","components/containers/inspector/ExecutorInspector.tsx","components/atoms/Card.tsx","components/menus/definitions/subtypes/ExecutorTypePage.tsx","icons/components/JobIcon.tsx","icons/components/JobOnHoldIcon.tsx","icons/ui/MinusIcon.tsx","icons/ui/PlusIcon.tsx","components/menus/stage/StagedJobMenu.tsx","components/atoms/nodes/JobNode.tsx","components/containers/inspector/JobInspector.tsx","mappings/JobMapping.tsx","components/atoms/summaries/JobSummary.tsx","mappings/ExecutorMapping.tsx","icons/components/ParameterIcon.tsx","mappings/ParameterMapping.tsx","components/menus/definitions/subtypes/ParameterTypePage.tsx","components/atoms/summaries/ParameterSummary.tsx","components/containers/inspector/ParameterInspector.tsx","mappings/ComponentMapping.tsx","components/atoms/ConnectionLine.tsx","components/atoms/Edge.tsx","components/containers/PreviewToolbox.tsx","components/containers/WorkflowContainer.tsx","components/panes/WorkflowsPane.tsx","components/atoms/ComponentInfo.tsx","components/atoms/Toast.tsx","components/containers/ParametersContainer.tsx","components/menus/definitions/InspectorDefinitionMenu.tsx","components/atoms/Definition.tsx","icons/ui/InfoIcon.tsx","icons/ui/ToolTipPointerIcon.tsx","components/atoms/Tooltip.tsx","components/containers/GuideContainer.tsx","components/containers/DefinitionsContainer.tsx","components/menus/definitions/OrbDefinitionsMenu.tsx","components/menus/definitions/OrbImportMenu.tsx","components/containers/OrbImportsContainer.tsx","components/menus/definitions/DefinitionsMenu.tsx","state/Store.tsx","App.tsx","index.tsx"],"names":["typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","getWindowDimensions","window","width","innerWidth","height","innerHeight","DropdownContainer","props","useState","isExtended","setExtended","left","top","pos","setPos","buttonRef","useRef","useEffect","current","rect","getBoundingClientRect","x","y","space","addEventListener","React","Children","toArray","children","first","className","ref","type","onClick","event","stopPropagation","style","EditorPane","config","state","editingConfig","loadConfig","actions","inputFile","configYAML","yml","matchSDKComment","match","index","comment","version","endOfSDKComment","length","substring","accept","onChange","e","target","files","text","then","click","theme","language","original","modified","wrapperProps","value","NavigationPane","navigation","NavPage","component","Component","WorkflowIcon","viewBox","fill","color","d","AddIcon","fillRule","clipRule","AddButton","ExpandIcon","expanded","SelectField","name","field","meta","helper","initialValue","setValue","Select","defaultSelected","findIndex","child","selected","setSelected","icon","placeholder","dropdownClassName","map","i","CommandIcon","xmlns","stroke","strokeLinecap","strokeLinejoin","strokeWidth","CommandSummary","data","getField","error","as","InspectorProperty","label","useField","touched","hidden","required","dependent","DeleteItemIcon","DragItemIcon","CollapsibleList","setExpanded","classNameExpanded","newExpanded","title","titleExpanded","ListItem","arrayHelper","draggableId","provided","_","innerRef","draggableProps","dragHandleProps","remove","ListProperty","values","emptyText","description","listItem","ListChild","render","onDragEnd","result","destination","move","source","droppableId","droppableProps","item","BreadCrumbArrowIcon","BreadCrumbs","navigateBack","components","navAt","depth","curDepth","push","distance","Label","Icon","from","undefined","reverse","commandSubtypes","run","summary","command","parameters","fields","checkout","persist_to_workspace","attach_workspace","store_artifacts","store_test_results","save_cache","subtypes","integer","parameter","enum","enumValues","string","defaultValue","boolean","executor","steps","env_var_name","ParamListContainer","paramList","parent","key","TabbedMenu","activeTab","setActiveTab","tabs","tab","Array","isArray","StepDefinitionMenu","customCommand","definitions","subtype","isName","builtIn","builtInSubtype","commands","find","initialValues","enableReinitialize","onSubmit","step","toast","content","status","apply","editing","console","formikProps","selectSubtype","disabled","StepDefinitionMenuNav","StepListItem","navigateTo","commandName","Object","keys","commandValues","StepTypePageNav","setSubtype","SubTypeMenuNav","nonce","SubTypeSelectPage","typePage","SubTypeMenuPage","menuPage","previous","menuProps","typeProps","navSubTypeMenu","v4","NewButton","passThrough","dataType","CommandMapping","CommandInspector","parameterSubtypes","executors","componentParametersSubtypes","pipeline","types","job","singular","plural","defaults","transform","parsers","parseCustomCommand","store","get","add","defineCommand","update","updateCommand","undefineCommand","inspector","docsInfo","link","ExecutorIcon","id","cx","cy","r","ExecutorSummary","executorSubtypes","docker","DockerExecutor","resourceClasses","docsLink","machine","MachineExecutor","macos","MacOSExecutor","windows","WindowsExecutor","ExecutorInspector","resourceClass","Card","truncate","pinned","slice","ExecutorTypePageNav","href","JobIcon","JobOnHoldIcon","role","focusable","MinusIcon","filled","PlusIcon","maskUnits","mask","StagedJobMenuNav","reusable","ParameterizedJob","orb","OrbRef","ConnectorIcon","subtraction","JobNode","elements","workflows","selectedWorkflow","dragging","updateJob","setConnecting","toolbox","previewToolbox","altAction","removeWorkflowElement","connecting","updateConnecting","handles","node","requiredBy","requires","hovering","setHovering","filtered","filters","filter","preview","jobFilter","pattern","ignoreFilter","ignore","includes","onlyFilter","only","trackHovering","entering","leaving","postEnter","postLeave","onMouseEnter","reduce","n","onMouseLeave","nodeRef","startConnecting","side","connectionNodeId","connectionHandleType","connectionHandleId","preventDefault","start","onDragOver","dragTarget","JobMapping","onDrop","applyToNode","applyToData","old","new","workflowJob","element","isNode","updateWorkflowJob","draggable","onDragStart","origin","isApproval","classNameValue","jobIcon","position","Position","Right","Left","EmbeddedExecutor","embeddedExecutor","defineExecutor","embeddedHelper","Executor","asReusable","parseJob","jobs","defineJob","undefineJob","params","workflow","WorkflowJob","stagedJobMap","stagedJobs","workflowName","executorKeys","getEmbeddedExecutor","executorName","exec","ExecutorMapping","image","resource_class","xcode","parseReusableExecutor","updateExecutor","undefineExecutor","Job","param","getSubtype","reusableExec","reusableExecsKeys","ParameterIcon","ParameterMapping","parseParameter","defineParameter","updateParameter","undefineParameter","dataMappings","mapping","CustomCommand","CustomParameter","getPos","isSource","bounds","ConnectionLine","targetX","targetY","flowState","handle","end","dist","invalid","snapTo","snapToBounds","Edge","sourceX","sourceY","sourcePosition","targetPosition","gap","arrowHeadType","markerEndId","PreviewToolbox","updateToolbox","updatePreviewToolBox","updateFilter","WorkflowPane","importOrb","zoom","setTransform","cooldown","setCooldown","addWorkflowElement","setWorkflowElements","setAltAction","connectingTo","setConnectingTo","shiftKey","setTimeout","targetJob","handleMouseUp","startName","intent","addEdge","sourceHandle","targetHandle","animated","updatedRequires","requirement","edge","removeEventListener","NodeGraph","flowActions","setConnectionNodeId","setConnectingPosition","setConnectionPosition","onDrag","onMouseMove","containerBounds","closest","clientX","clientY","nodeMapping","round","val","Math","floor","workflowNode","connectable","dragHandle","onMove","selectNodesOnDrag","nodeTypes","assign","edgeTypes","snapToGrid","connectionMode","ConnectionMode","Loose","connectionLineComponent","variant","BackgroundVariant","Dots","bgClassName","size","WorkflowsPane","selectWorkflow","addWorkflow","num","ComponentInfo","Toast","clearToast","ParameterContainer","arrayHelpers","dataMapping","InspectorDefinitionMenu","passBackKey","entries","generateConfig","setGuideStep","guideStep","submitToStore","unpacked","iconComponent","getIcon","validateOnBlur","validate","errors","dupIndex","trim","newDefinition","submitData","guide","parentValues","args","InspectorDefinitionMenuNav","DefinitionIcon","Definition","Summary","setDragging","CircleCI","generated","generate","flattened","InfoIcon","ToolTipPointerIcon","direction","right","bottom","horizontal","ToolTip","updatePos","GuideContainer","DefinitionsContainer","items","info","orbDefinitions","OrbDefinitionContainer","OrbDefinitionMenuNav","setOrb","fetch","res","json","loadOrb","namespace","manifest","OrbImport","inProject","orbs","importedOrb","src","logo_url","alt","componentType","searchClient","algoliasearch","Pagination","usePagination","pages","refine","page","OrbImportMenuNav","InstantSearch","indexName","SearchBox","classNames","form","input","submit","HitsPerPage","default","Hits","hitComponent","hit","sendEvent","url","full_name","padding","OrbImportsContainer","DefinitionsMenuNav","workflowGraphs","updateConfig","persistProps","isExpanded","Actions","action","payload","setPlaceholder","curNav","jumpedFrom","root","travelTo","Error","DefinitionsMenu","concat","removeWorkflow","jobName","curWorkflow","stagedJob","unimportOrb","parseConfig","getJobName","baseName","workflowJobCounts","sourceJobCounts","jobTable","requiredJobs","forEach","sourceJobName","requiredJob","endJobs","columns","solved","solve","col","row","greatestColumn","greatestRow","requiredJobProps","max","exception","errorMessage","message","flow","Workflow","defs","merge","cur","pipelineParameters","parameterList","CustomParametersList","Config","Store","createStore","App","appWidth","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.088b3cda.chunk.js","sourcesContent":["import { createTypedHooks } from 'easy-peasy';\nimport { useEffect, useState } from 'react';\nimport { StoreActions, StoreModel } from './Store';\n\nconst typedHooks = createTypedHooks<StoreModel & StoreActions>();\n\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { ReactChild, useEffect, useRef, useState } from 'react';\n\nconst DropdownContainer = (props: {\n  className?: string;\n  space?: number;\n  children: ReactChild[] | ReactChild;\n}) => {\n  const [isExtended, setExtended] = useState(false);\n  const [pos, setPos] = useState({ left: 0, top: 0 });\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (!buttonRef.current) {\n      return;\n    }\n\n    const rect = buttonRef.current.getBoundingClientRect();\n\n    setPos({ left: rect.x, top: rect.y + rect.height + (props.space || 4) });\n\n    // hide the box when a click event fires\n    window.addEventListener('click', () => {\n      setExtended(false);\n    });\n  }, [isExtended, props.space]);\n\n  const [first, ...children] = React.Children.toArray(props.children);\n\n  return (\n    <>\n      <button\n        className={props.className}\n        ref={buttonRef}\n        type=\"button\"\n        onClick={(event) => {\n          setExtended(!isExtended);\n          // prevent the click event from bubbling up to event that will close the drawer\n          event.stopPropagation();\n        }}\n      >\n        {first}\n      </button>\n      {isExtended && (\n        <div className=\"fixed w-max h-max z-20 flex flex-col\" style={pos}>\n          {children}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default DropdownContainer;\n","import Editor, { DiffEditor } from '@monaco-editor/react';\nimport { useRef } from 'react';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport DropdownContainer from '../containers/DropdownContainer';\nimport { version } from '../../version.json';\n\nconst EditorPane = () => {\n  const config = useStoreState((state) => state.config);\n  const editingConfig = useStoreState((state) => state.editingConfig);\n  const loadConfig = useStoreActions((actions) => actions.loadConfig);\n  const inputFile = useRef<HTMLInputElement>(null);\n\n  const configYAML = (yml: string) => {\n    const matchSDKComment = yml?.match('# SDK Version: .*\\n');\n\n    if (yml && matchSDKComment && matchSDKComment.index) {\n      const comment = `# VCE Version: ${version}\\n# Modeled with the CircleCI visual config editor.\\n# For more information, see https://github.com/CircleCI-Public/visual-config-editor\\n`;\n      const endOfSDKComment = matchSDKComment.index + matchSDKComment[0].length;\n\n      return (\n        yml.substring(0, endOfSDKComment) +\n        comment +\n        yml.substring(endOfSDKComment, yml.length)\n      );\n    }\n\n    return yml;\n  };\n\n  return (\n    <div className=\"bg-circle-gray-900 h-2/5 w-full flex flex-col\">\n      <div className=\"border-b text-xl border-circle-gray-800 font-bold flex flex-row\">\n        <div className=\"ml-4 border-b-4 px-3 py-3 w-max text-sm tracking-wide font-bold text-white border-white\">\n          CONFIG\n        </div>\n        <div className=\"p-2 ml-auto\">\n          <input\n            type=\"file\"\n            accept=\".yml,.yaml\"\n            ref={inputFile}\n            className=\"hidden\"\n            onChange={(e) => {\n              if (!e.target.files) {\n                return;\n              }\n\n              e.target.files[0].text().then((yml) => {\n                loadConfig(yml);\n              });\n            }}\n          />\n          <DropdownContainer className=\"rounded-md bg-circle-gray-300 text-circle-black px-2 hover:bg-circle-gray-400\">\n            <p>•••</p>\n            <div className=\"bg-white flex-col flex rounded shadow text-base\">\n              <button\n                className=\"border-b border-circle-gray-300 pl-3 pr-8 text-left hover:bg-circle-gray-300\"\n                onClick={(e) => {\n                  inputFile.current?.click();\n                  e.stopPropagation();\n                }}\n              >\n                Open\n              </button>\n              <button className=\"border-b border-circle-gray-300 pl-3 pr-8 text-left hover:bg-circle-gray-300\">\n                Save\n              </button>\n            </div>\n          </DropdownContainer>\n        </div>\n      </div>\n      <div className=\"flex-1 overflow-hidden\">\n        {editingConfig ? (\n          <DiffEditor\n            theme=\"vs-dark\"\n            language=\"yaml\"\n            original={config && configYAML(config)}\n            modified={editingConfig && configYAML(editingConfig)}\n          />\n        ) : (\n          <Editor\n            theme=\"vs-dark\"\n            wrapperProps={{ className: 'flex-1 flex-grow' }}\n            language=\"yaml\"\n            value={config && configYAML(config)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EditorPane;\n","import { useStoreState } from '../../state/Hooks';\n\ninterface NavigationPaneProps {\n  width: number;\n}\n\n/**\n * @see\n * @returns\n */\nconst NavigationPane = ({ width }: NavigationPaneProps) => {\n  const navigation = useStoreState((state) => state.navigation);\n  const NavPage = navigation.component.Component;\n\n  return (\n    <div\n      className=\"h-full border-l border-circle-gray-300 pt-6 bg-white flex flex-col overflow-y-hidden\"\n      style={{ width }}\n    >\n      <NavPage {...navigation.props} />\n    </div>\n  );\n};\n\nexport default NavigationPane;\n","import { IconProps } from '../IconProps';\n\nconst WorkflowIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 24 24\" className={props.className} fill={props.color}>\n    <path d=\"M13,12.0005 L13,14.5005 C13,15.8812153 14.1192847,17.0005 15.5,17.0005 C16.7716732,17.0005 17.8215783,16.0510253 17.9794794,14.8223119 C16.8252603,14.4045443 16,13.2985065 16,12.0005 C16,10.3434832 17.3434471,9.0005 19,9.0005 C20.6565529,9.0005 22,10.3434832 22,12.0005 C22,13.3107265 21.1591278,14.4253528 19.9878345,14.8339277 C19.8172144,17.1635097 17.8731367,19.0005 15.5,19.0005 C13.0147153,19.0005 11,16.9857847 11,14.5005 L11,12.0005 L11,9.4995 C11,8.11906389 9.88099443,7.0005 8.5,7.0005 C7.2278041,7.0005 6.17794274,7.94975945 6.020417,9.17853139 C7.17480406,9.5960731 8,10.7018409 8,12.0005 C8,13.6567847 6.65628475,15.0005 5,15.0005 C3.34371525,15.0005 2,13.6567847 2,12.0005 C2,10.6896797 2.84072326,9.57538027 4.01209968,9.16698275 C4.18228055,6.83714058 6.12646259,5.0005 8.5,5.0005 C10.9853872,5.0005 13,7.0143176 13,9.4995 L13,12.0005 Z M6,12.0005 C6,11.4482074 5.55213797,11.0005 5,11.0005 C4.44786203,11.0005 4,11.4482074 4,12.0005 C4,12.5522153 4.44828475,13.0005 5,13.0005 C5.55171525,13.0005 6,12.5522153 6,12.0005 Z M20,12.0005 C20,11.4482074 19.552138,11.0005 19,11.0005 C18.447862,11.0005 18,11.4482074 18,12.0005 C18,12.5522153 18.4482847,13.0005 19,13.0005 C19.5517153,13.0005 20,12.5522153 20,12.0005 Z\"></path>\n  </svg>\n);\n\nexport default WorkflowIcon;\n","import { IconProps } from '../IconProps';\n\nconst AddIcon = (props: IconProps) => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    className={props.className}\n    fill=\"none\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M7 7V1C7 0.447715 7.44772 0 8 0C8.55229 0 9 0.447715 9 1V7H15C15.5523 7 16 7.44772 16 8C16 8.55229 15.5523 9 15 9H9V15C9 15.5523 8.55229 16 8 16C7.44772 16 7 15.5523 7 15V9H1C0.447715 9 0 8.55229 0 8C0 7.44772 0.447715 7 1 7H7Z\"\n      fill=\"#343434\"\n    />\n  </svg>\n);\n\nexport default AddIcon;\n","import { ButtonHTMLAttributes } from 'react';\nimport AddIcon from '../../icons/ui/AddIcon';\n\nconst AddButton = (props: ButtonHTMLAttributes<HTMLButtonElement>) => {\n  return (\n    <button\n      {...props}\n      className={'bg-circle-gray-300 h-10 w-14 rounded ' + props.className}\n    >\n      <AddIcon className=\"m-auto\"></AddIcon>\n    </button>\n  );\n};\n\nexport default AddButton;\n","import { IconProps } from '../IconProps';\n\nconst ExpandIcon = (props: IconProps & { expanded: boolean }) => (\n  <svg viewBox=\"0 0 14 14\" className={props.className}>\n    <path\n      d={\n        props.expanded\n          ? 'M4.20710678,6 L11.7928932,6 C12.0690356,6 12.2928932,6.22385763 12.2928932,6.5 C12.2928932,6.63260824 12.2402148,6.7597852 12.1464466,6.85355339 L8.35355339,10.6464466 C8.15829124,10.8417088 7.84170876,10.8417088 7.64644661,10.6464466 L3.85355339,6.85355339 C3.65829124,6.65829124 3.65829124,6.34170876 3.85355339,6.14644661 C3.94732158,6.05267842 4.07449854,6 4.20710678,6 Z'\n          : 'M6,11.7928932 L6,4.20710678 C6,3.93096441 6.22385763,3.70710678 6.5,3.70710678 C6.63260824,3.70710678 6.7597852,3.7597852 6.85355339,3.85355339 L10.6464466,7.64644661 C10.8417088,7.84170876 10.8417088,8.15829124 10.6464466,8.35355339 L6.85355339,12.1464466 C6.65829124,12.3417088 6.34170876,12.3417088 6.14644661,12.1464466 C6.05267842,12.0526784 6,11.9255015 6,11.7928932 Z'\n      }\n    ></path>\n  </svg>\n);\n\nexport default ExpandIcon;\n","import { FieldHelperProps, FieldInputProps, FieldMetaProps } from 'formik';\nimport React, { OptionHTMLAttributes, ReactElement, useState } from 'react';\nimport ExpandIcon from '../../icons/ui/ExpandIcon';\nimport DropdownContainer from '../containers/DropdownContainer';\n\ntype OptionElement = ReactElement<OptionHTMLAttributes<HTMLHtmlElement>>;\n\ntype SelectProps = {\n  placeholder?: string;\n  value?: any;\n  className?: string;\n  dropdownClassName?: string;\n  onChange?: (value: any) => void;\n  children: OptionElement[] | OptionElement;\n  icon?: ReactElement;\n};\n\ntype SelectFieldProps = SelectProps & {\n  name: string;\n  field: FieldInputProps<any>;\n  meta: FieldMetaProps<any>;\n  helper: FieldHelperProps<any>;\n};\n\nconst SelectField = ({\n  name,\n  field,\n  meta,\n  helper,\n  ...props\n}: SelectFieldProps) => {\n  const { value, initialValue } = meta;\n  const { setValue } = helper;\n\n  return (\n    <Select\n      {...field}\n      {...props}\n      value={value || initialValue}\n      onChange={(value) => {\n        setValue(value);\n      }}\n    />\n  );\n};\n\nconst Select = (props: SelectProps) => {\n  const children = React.Children.toArray(props.children) as OptionElement[];\n  const defaultSelected = children.findIndex(\n    (child) => child.props.value === props.value,\n  );\n  const [selected, setSelected] = useState(defaultSelected);\n\n  return (\n    <DropdownContainer\n      className={\n        'rounded border border-circle-gray-300 px-2 shadow-sm hover:border-circle-gray-700 ' +\n        props.className\n      }\n    >\n      <div className=\"flex flex-row\">\n        {props.icon}\n        <div\n          className={`${\n            selected === -1 ? 'text-circle-gray-500' : 'text-circle-black'\n          } ml-2 leading-10`}\n        >\n          {selected > -1\n            ? children[selected].props.children\n            : props.placeholder}\n        </div>\n        <div className=\"ml-auto py-2\">\n          <ExpandIcon className=\"w-3 h-5 mr-3 ml-3\" expanded={true} />\n        </div>\n      </div>\n      <div className={'bg-white py-2 shadow-lg ' + props.dropdownClassName}>\n        {children.map((child, i) => {\n          return (\n            <button\n              className={`px-3 py-1 text-left w-full hover:bg-circle-gray-200 ${\n                i > 0 && 'border-t border-circle-gray-300'\n              }`}\n              key={i}\n              onClick={() => {\n                setSelected(i);\n\n                if (props.onChange) {\n                  props.onChange(children[i].props.value);\n                }\n              }}\n            >\n              {child.props.children}\n            </button>\n          );\n        })}\n      </div>\n    </DropdownContainer>\n  );\n};\n\nexport { Select, SelectField };\n","import { IconProps } from '../IconProps';\n\nconst CommandIcon = (props: IconProps) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    className={props.className}\n    fill=\"none\"\n    stroke=\"black\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\"\n    />\n  </svg>\n);\n\nexport default CommandIcon;\n","import { CustomCommand } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Commands/exports/Reusable';\nimport CommandIcon from '../../../icons/components/CommandIcon';\n\nconst CommandSummary: React.FunctionComponent<{ data: CustomCommand }> = (\n  props,\n) => {\n  return (\n    <div className=\"flex flex-row\">\n      <CommandIcon className=\"ml-1 mr-2 w-5 h-5\"/> {props.data.name}\n    </div>\n  );\n};\n\nexport default CommandSummary;\n","import {\n  Field,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldMetaProps,\n  useField,\n} from 'formik';\nimport { ReactElement, useEffect } from 'react';\nimport { SelectField } from '../Select';\n\nexport type InspectorFieldProps = {\n  label: string;\n  name: any;\n  as?: string;\n  type?: string;\n  value?: any;\n  hidden?: boolean;\n  className?: string;\n  required?: boolean;\n  placeholder?: string;\n  onChange?: (e: any) => void;\n  children?: ReactElement[] | ReactElement;\n  dependent?: (value: any) => ReactElement;\n};\n\nconst getField = (\n  props: Partial<InspectorFieldProps>,\n  field: FieldInputProps<any>,\n  meta: FieldMetaProps<any>,\n  helper: FieldHelperProps<any>,\n  error?: string,\n) => {\n  if (props.children && props.as === 'select') {\n    return (\n      <SelectField\n        {...props}\n        name={props.name}\n        meta={meta}\n        field={field}\n        helper={helper}\n        placeholder={props.placeholder}\n        className={'w-full ' + props.className}\n      >\n        {props.children}\n      </SelectField>\n    );\n  }\n\n  return (\n    props.children ?? (\n      <Field\n        {...field}\n        {...props}\n        className={`${props.type !== 'checkbox' ? 'w-full' : 'ml-auto'} \n        border-2 rounded p-1 ${\n          error ? 'border-circle-red' : 'border-circle-gray-300'\n        }`}\n      ></Field>\n    )\n  );\n};\n\nconst InspectorProperty = ({ label, ...props }: InspectorFieldProps) => {\n  const [field, meta, helper] = useField(props);\n  const { touched, error, value } = meta;\n\n  // Sync form value to the prop value on mount\n  useEffect(() => {\n    if (props.value && value !== props.value) {\n      helper.setValue(props.value);\n    }\n  }, [helper, value, props.value]);\n\n  return (\n    <>\n      <div\n        className={`${props.type === 'checkbox' && `flex flex-row`} mb-3 ${\n          props.className\n        }`}\n        hidden={props.hidden}\n      >\n        <div className=\"flex flex-row mb-2\">\n          <p className=\"font-bold leading-5 tracking-wide\">{label}</p>\n          {props.required && (\n            <span className=\"ml-auto tracking-wide leading-6 text-sm text-circle-gray-400 font-medium\">\n              Required\n            </span>\n          )}\n        </div>\n        {getField(props, field, meta, helper, error)}\n        {touched && error && (\n          <span className=\"text-sm text-circle-red\">{error}</span>\n        )}\n      </div>\n      {props.dependent && props.dependent(value)}\n    </>\n  );\n};\n\nexport default InspectorProperty;\n","import { IconProps } from '../IconProps';\n\nconst DeleteItemIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 12 12\" className={props.className}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M7.42616 6L11.7046 10.2785C12.0985 10.6723 12.0985 11.3108 11.7046 11.7046C11.3108 12.0985 10.6723 12.0985 10.2785 11.7046L6 7.42616L1.72153 11.7046C1.3277 12.0985 0.68919 12.0985 0.295367 11.7046C-0.0984557 11.3108 -0.0984557 10.6723 0.295367 10.2785L4.57384 6L0.295367 1.72153C-0.0984557 1.3277 -0.0984557 0.68919 0.295367 0.295367C0.68919 -0.0984557 1.3277 -0.0984557 1.72153 0.295367L6 4.57384L10.2785 0.295367C10.6723 -0.0984557 11.3108 -0.0984557 11.7046 0.295367C12.0985 0.68919 12.0985 1.3277 11.7046 1.72153L7.42616 6V6Z\"\n      fill={props.color}\n    />\n  </svg>\n);\n\nexport default DeleteItemIcon;\n","import { IconProps } from '../IconProps';\n\nconst DragItemIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 16 6\" className={props.className} fill={props.color}>\n    <path d=\"M16 1C16 0.447715 15.5523 0 15 0H1C0.447715 0 0 0.447715 0 1C0 1.55228 0.447715 2 1 2H15C15.5523 2 16 1.55228 16 1ZM0 5C0 5.55228 0.447715 6 1 6H15C15.5523 6 16 5.55228 16 5C16 4.44772 15.5523 4 15 4H1C0.447715 4 0 4.44772 0 5Z\"></path>\n  </svg>\n);\n\nexport default DragItemIcon;\n","import { ReactElement, useState } from 'react';\nimport ExpandIcon from '../../icons/ui/ExpandIcon';\n\nexport interface CollapsibleListProps {\n  title: string;\n  titleExpanded?: ReactElement;\n  children: ReactElement;\n  expanded?: boolean;\n  classNameExpanded?: string;\n  className?: string;\n  onChange?: (expanded: boolean) => void;\n}\n\nconst CollapsibleList = (props: CollapsibleListProps) => {\n  const [expanded, setExpanded] = useState(props.expanded || false);\n\n  return (\n    <div className={props.classNameExpanded && expanded ? props.classNameExpanded : props.className}>\n      <div className=\"flex flex-row\">\n        <button\n          onClick={(e) => {\n            const newExpanded = !expanded;\n\n            setExpanded(newExpanded);\n            props.onChange && props.onChange(newExpanded);\n          }}\n          type=\"button\"\n          className=\"flex flex-row flex-1\"\n        >\n          <ExpandIcon className=\"w-3 h-5 mr-3\" expanded={expanded} />\n          <p className=\"font-bold leading-5 tracking-wide\">{props.title}</p>\n        </button>\n        {expanded && props.titleExpanded}\n      </div>\n      {expanded && <div className=\"ml-4\">{props.children}</div>}\n    </div>\n  );\n};\n\nexport default CollapsibleList;\n","import { ArrayHelpers, FieldArray, useField } from 'formik';\nimport { ReactElement } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport DeleteItemIcon from '../../../icons/ui/DeleteItemIcon';\nimport DragListIcon from '../../../icons/ui/DragItemIcon';\nimport CollapsibleList from '../../containers/CollapsibleList';\nimport { InspectorFieldProps } from './InspectorProperty';\n\nexport type ListItemChildProps = {\n  item: any;\n  index: number;\n  values: any;\n};\n\nexport type ListPropertyProps = InspectorFieldProps & {\n  titleExpanded?: ReactElement;\n  values?: any;\n  description?: string;\n  expanded?: boolean;\n  emptyText?: string;\n  listItem: (props: ListItemChildProps) => ReactElement;\n};\n\nexport type ListItemProps = {\n  index: number;\n  parameters?: any;\n  values?: any;\n  arrayHelper: ArrayHelpers;\n  children: ReactElement;\n};\n\nconst ListItem = ({ index, arrayHelper, children }: ListItemProps) => {\n  return (\n    <Draggable key={index} draggableId={`${index}`} index={index}>\n      {(provided, _) => (\n        <div\n          className=\"w-full mb-2 p-1 px-3 text-sm \nbg-white border border-circle-gray-300 rounded-md2 flex flex-row\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n        >\n          <div className=\"ml-auto mr-3\" {...provided.dragHandleProps}>\n            <DragListIcon className=\"w-4 h-6 py-1\" color=\"#AAAAAA\" />\n          </div>\n          {children}\n          <button\n            onClick={() => {\n              arrayHelper.remove(index);\n            }}\n            type=\"button\"\n            className=\"my-auto\"\n          >\n            <DeleteItemIcon className=\"w-3 h-3\" color=\"#AAAAAA\" />\n          </button>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\n// This is currently hard coded to support steps, but can be broken out to support other sorts of lists.\nconst ListProperty = ({\n  label,\n  values,\n  description,\n  emptyText,\n  listItem,\n  ...props\n}: InspectorFieldProps & ListPropertyProps) => {\n  const [field] = useField(props);\n  const ListChild = listItem;\n\n  return (\n    <CollapsibleList\n      title={label}\n      titleExpanded={props.titleExpanded}\n      expanded={props.expanded}\n    >\n      {field.value?.length > 0 ? (\n        <FieldArray\n          {...field}\n          name={props.name}\n          render={(arrayHelper) => (\n            <DragDropContext\n              onDragEnd={(result) => {\n                if (result.destination) {\n                  arrayHelper.move(\n                    result.source.index,\n                    result.destination.index,\n                  );\n                }\n              }}\n            >\n              <Droppable droppableId=\"droppable\">\n                {(provided) => (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    className=\"p-2 pr-0\"\n                  >\n                    {field.value.map((item: any, index: number) => {\n                      return (\n                        <ListItem\n                          key={index}\n                          index={index}\n                          arrayHelper={arrayHelper}\n                        >\n                          <ListChild\n                            item={item}\n                            index={index}\n                            values={values}\n                          />\n                        </ListItem>\n                      );\n                    })}\n\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n        />\n      ) : (\n        <p className=\"ml-2 font-medium text-sm text-circle-gray-500\">\n          {emptyText}\n        </p>\n      )}\n    </CollapsibleList>\n  );\n};\n\nexport default ListProperty;\n","import { IconProps } from '../IconProps';\n\nconst BreadCrumbArrowIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 16 16\" className={props.className} fill={props.color}>\n    <path d=\"M11.6568842,7.24302798 C11.9577895,7.54393324 12.0268424,7.98889307 11.864043,8.35591473 C11.8154617,8.46509554 11.746442,8.56741392 11.6568842,8.65697164 C11.6570333,8.65709247 11.6569588,8.65716701 11.6568842,8.65724154 L6.70713677,13.606989 C6.31661248,13.9975133 5.6834475,13.9975133 5.29292321,13.606989 L5.29286323,13.606929 C4.90233894,13.2164047 4.90233894,12.5832398 5.29286323,12.1927155 L9.53557889,7.94999981 L5.29286323,3.70728415 C4.90233894,3.31675986 4.90233894,2.68359488 5.29286323,2.29307059 L5.29292321,2.29301061 C5.6834475,1.90248631 6.31661248,1.90248631 6.70713677,2.29301061 L11.6568842,7.24275807 C11.6569588,7.24283261 11.6570333,7.24290715 11.6571078,7.2429817 Z\"></path>\n  </svg>\n);\n\nexport default BreadCrumbArrowIcon;\n","import { ReactElement } from 'react';\nimport BreadCrumbArrowIcon from '../../icons/ui/BreadCrumbArrowIcon';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport { NavigationModel } from '../../state/Store';\n\nconst BreadCrumbs = () => {\n  const navigation = useStoreState((state) => state.navigation);\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n\n  let components: ReactElement[] = [];\n  let navAt: NavigationModel | undefined = navigation;\n  let depth = 0;\n\n  do {\n    const curDepth = depth;\n    if (depth > 0) {\n      components.push(\n        <BreadCrumbArrowIcon\n          className=\"pl-1 w-5 h-5\"\n          key={`breadcrumb-${curDepth}-arrow`}\n          color=\"#6A6A6A\"\n        />,\n      );\n    }\n\n    components.push(\n      <button\n        className={\n          curDepth === 0\n            ? 'font-medium text-black ml-1 cursor-default whitespace-nowrap'\n            : 'text-circle-gray-500 hover:underline hover:text-black overflow-ellipsis whitespace-nowrap'\n        }\n        key={`breadcrumb-${curDepth}-link`}\n        onClick={() => {\n          curDepth > 0 && navigateBack({ distance: curDepth });\n        }}\n      >\n        {curDepth > 1 ? '...' : navAt.component.Label(navAt.props)}\n      </button>,\n    );\n\n    if (navAt.component.Icon) {\n      const Icon = navAt.component.Icon(navAt.props);\n      Icon &&\n        components.push(<div key={`breadcrumb-${curDepth}-icon`}>{Icon}</div>);\n    }\n\n    depth++;\n    navAt = navAt.from;\n  } while (navAt !== undefined);\n\n  components.reverse();\n\n  return (\n    <nav className=\"px-6\">\n      <div className=\"flex items-center\">\n        {components.map((component) => component)}\n      </div>\n    </nav>\n  );\n};\n\nexport default BreadCrumbs;\n","import { Field } from 'formik';\nimport { ReactElement } from 'react';\nimport InspectorProperty from '../../../atoms/form/InspectorProperty';\n\nexport interface CommandSubTypes {\n  [command: string]: {\n    name: string;\n    description?: string;\n    summary?: (command: any) => ReactElement;\n    fields: ReactElement;\n  };\n}\n\nconst commandSubtypes: CommandSubTypes = {\n  run: {\n    name: 'Run a command',\n    description: 'Used for invoking all command-line programs',\n    summary: (command) => (\n      <p className=\"inline\">{command.parameters.command}</p>\n    ),\n    fields: (\n      <div>\n        <InspectorProperty\n          label=\"Command\"\n          as=\"textarea\"\n          required\n          name=\"parameters.command\"\n        />\n        <InspectorProperty label=\"Shell\" name=\"parameters.shell\" />\n        <InspectorProperty\n          label=\"Background\"\n          type=\"checkbox\"\n          name=\"parameters.background\"\n        />\n        <InspectorProperty\n          label=\"Working Directory\"\n          name=\"parameters.working_directory\"\n        />\n        <InspectorProperty\n          label=\"No Output Timeout\"\n          name=\"parameters.no_output_timeout\"\n        />\n        <InspectorProperty label=\"When\" as=\"select\" name=\"parameters.when\">\n          <option value=\"undefined\">Select When</option>\n          <option value=\"always\">Always</option>\n          <option value=\"on_success\">On Success</option>\n          <option value=\"on_fail\">On Fail</option>\n        </InspectorProperty>\n      </div>\n    ),\n  },\n  checkout: {\n    name: 'Checkout',\n    description:\n      'A special step used to check out source code to the configured path',\n    fields: <InspectorProperty label=\"Path\" name=\"parameters.path\" />,\n  },\n  persist_to_workspace: {\n    name: 'Persist To Workspace',\n    description:\n      'Persist a temporary file to be used by another job in the workflow',\n    fields: (\n      <div>\n        <InspectorProperty label=\"Root\" name=\"parameters.root\" required />\n        <InspectorProperty label=\"Path\" name=\"parameters.path\" required />\n      </div>\n    ),\n  },\n  attach_workspace: {\n    name: 'Attach Workspace',\n    description: 'Attach the workflow’s workspace to the current container',\n    fields: <InspectorProperty label=\"At\" name=\"parameters.at\" required />,\n  },\n  store_artifacts: {\n    name: 'Store Artifacts',\n    description: 'Step to store artifacts such as logs and binaries',\n    fields: (\n      <div>\n        Path\n        <Field\n          required\n          name=\"parameters.path\"\n          className=\"p-1 w-full border-circle-light-blue border-2 rounded\"\n        ></Field>\n        <br />\n        Destination\n        <Field\n          name=\"parameters.destination\"\n          className=\"p-1 w-full border-circle-gray-300 border-2 rounded\"\n        ></Field>\n      </div>\n    ),\n  },\n  store_test_results: {\n    name: 'Store Test Results',\n    description: 'Upload and store test results for a build',\n    fields: <InspectorProperty label=\"Path\" name=\"parameters.path\" required />,\n  },\n  save_cache: {\n    name: 'Save Cache',\n    description:\n      'Generates and stores a cache of a file or directory in object storage',\n    fields: (\n      <div>\n        <InspectorProperty label=\"Path\" name=\"parameters.path\" required />\n        <InspectorProperty label=\"Key\" name=\"parameters.key\" required />\n        <InspectorProperty label=\"When\" name=\"parameters.when\" as=\"select\">\n          <option value=\"undefined\">Select When</option>\n          <option value=\"always\">Always</option>\n          <option value=\"on_success\">On Success</option>\n          <option value=\"on_fail\">On Fail</option>\n        </InspectorProperty>\n      </div>\n    ),\n  },\n};\n\nexport { commandSubtypes };\n","import { parameters } from '@circleci/circleci-config-sdk';\nimport { AnyParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport InspectorProperty from '../atoms/form/InspectorProperty';\n\nexport type ParamListContainerProps = {\n  paramList: parameters.CustomParametersList<AnyParameterLiteral>;\n  parent?: string;\n  props?: any;\n};\n\ntype ParamInspector = {\n  [K in AnyParameterLiteral]: (\n    parameter: parameters.CustomParameter<AnyParameterLiteral>,\n  ) => any;\n};\n\nconst subtypes: ParamInspector = {\n  integer: (parameter) => {\n    return {\n      className: 'w-full',\n      type: 'number',\n    };\n  },\n  enum: (parameter) => {\n    const enumParam = parameter as parameters.CustomEnumParameter;\n\n    return {\n      as: 'select',\n      className: 'w-full',\n      children: enumParam.enumValues.map((value) => (\n        <option value={value}>{value}</option>\n      )),\n    };\n  },\n  string: (parameter) => {\n    return {\n      placeholder: parameter.defaultValue as string,\n    };\n  },\n  boolean: (parameter) => {\n    return {\n      type: 'checkbox',\n    };\n  },\n  executor: (parameter) => {\n    return {};\n  },\n  steps: (parameter) => {\n    return {};\n  },\n  env_var_name: (parameter) => {\n    return {};\n  },\n};\n\nconst ParamListContainer = ({\n  paramList,\n  parent,\n  props,\n}: ParamListContainerProps) => {\n  return (\n    <>\n      {paramList.parameters.map((parameter, index) => {\n        return (\n          <InspectorProperty\n            {...props}\n            label={parameter.name}\n            key={index}\n            name={parent ? `${parent}.${parameter.name}` : parameter.name}\n            {...subtypes[parameter.type](parameter)}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default ParamListContainer;\n","import { useState } from 'react';\n\nexport interface TabbedPaneProps {\n  tabs: string[];\n  activeTab?: number;\n  children: React.ReactNode | React.ReactNode[];\n  onChange?: (index: number) => void;\n}\n\nconst TabbedMenu = (props: TabbedPaneProps) => {\n  const [activeTab, setActiveTab] = useState(props.activeTab || 0);\n\n  return (\n    <div className=\"h-full\">\n      <div className=\"flex border-b border-circle-gray-300 pl-6\">\n        {props.tabs.map((tab, index) => (\n          <button\n            type=\"button\"\n            key={index}\n            className={`text-sm tracking-wide px-3 py-3 font-bold text-center ${\n              index === activeTab\n                ? 'border-black border-b-4 text-circle-black'\n                : 'text-circle-gray-600 mb-1'\n            }`}\n            onClick={() => {\n              if (props.onChange) {\n                props.onChange(index);\n              }\n\n              setActiveTab(index);\n            }}\n          >\n            {tab}\n          </button>\n        ))}\n      </div>\n      {Array.isArray(props.children)\n        ? props.children[activeTab]\n        : props.children}\n    </div>\n  );\n};\n\nexport default TabbedMenu;\n","import { reusable } from '@circleci/circleci-config-sdk';\nimport { Form, Formik } from 'formik';\nimport CommandIcon from '../../../icons/components/CommandIcon';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { NavigationComponent } from '../../../state/Store';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport { commandSubtypes } from '../../containers/inspector/subtypes/CommandSubtypes';\nimport ParamListContainer from '../../containers/ParamListContainer';\nimport { SubTypeMenuPageProps } from '../SubTypeMenu';\nimport TabbedMenu from '../TabbedMenu';\n\ntype StepDefinitionProps = {\n  values?: Record<string, object>;\n  editing?: boolean;\n  index?: number;\n} & SubTypeMenuPageProps<any>;\n\nconst StepDefinitionMenu = (props: StepDefinitionProps) => {\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n  const definitions = useStoreState((state) => state.definitions);\n  const subtype = props.subtype || props.values?.name;\n\n  const isName = typeof subtype === 'string';\n  const builtIn = isName && subtype in commandSubtypes;\n  const builtInSubtype = builtIn\n    ? commandSubtypes[subtype as string]\n    : undefined;\n  let customCommand: reusable.CustomCommand | undefined;\n\n  if (!builtIn) {\n    customCommand = isName\n      ? definitions.commands.find((command) => (command.name = subtype))\n      : (subtype as reusable.CustomCommand);\n  }\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <header>\n        <BreadCrumbs />\n        <h1 className=\"ml-6 text-2xl py-2 font-bold\">New Step</h1>\n      </header>\n      <Formik\n        initialValues={props.values || { parameters: undefined }}\n        enableReinitialize={true}\n        onSubmit={(step) => {\n          const name = builtIn ? subtype : customCommand?.name;\n          const parameters = builtIn ? step.parameters : step;\n\n          navigateBack({\n            toast: {\n              label: name ?? '',\n              content: 'saved',\n              status: 'success',\n            },\n            distance: 1,\n            apply: (values: any) => {\n              if (!props.editing) {\n                values.steps = [\n                  ...values.steps,\n                  {\n                    [name as string]: parameters,\n                  },\n                ];\n              } else {\n                if (props.index === undefined) {\n                  console.error('Step index was undefined when editing step.');\n\n                  return values;\n                }\n\n                values.steps[props.index] = {\n                  [name as string]: parameters,\n                };\n              }\n\n              return values;\n            },\n          });\n        }}\n      >\n        {(formikProps) => (\n          <Form className=\"flex flex-col flex-1\">\n            <TabbedMenu tabs={['PROPERTIES']}>\n              <div className=\"p-6\">\n                <button\n                  className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n                  type=\"button\"\n                  onClick={() => {\n                    props.selectSubtype();\n                  }}\n                  disabled={props.editing}\n                >\n                  <p className=\"font-bold\">\n                    {builtInSubtype\n                      ? builtInSubtype?.name\n                      : customCommand?.name}\n                  </p>\n                  <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                    {builtInSubtype\n                      ? builtInSubtype?.description\n                      : customCommand?.description}\n                  </p>\n                </button>\n                {builtInSubtype\n                  ? builtInSubtype?.fields\n                  : customCommand?.parameters && (\n                      <ParamListContainer\n                        props={formikProps}\n                        paramList={customCommand.parameters}\n                      />\n                    )}\n              </div>\n            </TabbedMenu>\n\n            <span className=\"border-b border-circle-gray-300 mt-auto\" />\n            <button\n              type=\"submit\"\n              className=\"text-white text-sm font-medium p-2 m-6 bg-circle-blue duration:50 transition-all rounded-md2\"\n            >\n              Save Step\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst StepDefinitionMenuNav: NavigationComponent = {\n  Component: StepDefinitionMenu,\n  Label: (props: StepDefinitionProps) => {\n    return <p>{props.editing ? 'Edit' : 'New'} Step</p>;\n  },\n  Icon: (props: StepDefinitionProps) => {\n    return <CommandIcon className=\"w-6 h-8 py-2\" />;\n  },\n};\n\nexport { StepDefinitionMenu, StepDefinitionMenuNav };\n","import { useStoreActions } from '../../../state/Hooks';\nimport { StepDefinitionMenuNav } from '../../menus/definitions/StepDefinitionMenu';\nimport { ListItemChildProps } from './ListProperty';\n\nconst StepListItem = ({ item, index, values }: ListItemChildProps) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const commandName = Object.keys(item)[0];\n  const commandValues = item[commandName];\n\n  return (\n    <button\n      className=\"flex-1 cursor-pointer text-left text-circle-black leading-6\"\n      type=\"button\"\n      onClick={() => {\n        navigateTo({\n          component: StepDefinitionMenuNav,\n          props: {\n            editing: true,\n            values: {\n              name: commandName,\n              parameters: commandValues,\n            },\n            index,\n          },\n          values,\n        });\n      }}\n    >\n      {commandName}\n    </button>\n  );\n};\n\nexport default StepListItem;\n","import { CustomCommand } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Commands/exports/Reusable';\nimport { useStoreState } from '../../../../state/Hooks';\nimport { NavigationComponent } from '../../../../state/Store';\nimport BreadCrumbs from '../../../containers/BreadCrumbs';\nimport { commandSubtypes } from '../../../containers/inspector/subtypes/CommandSubtypes';\nimport TabbedMenu from '../../TabbedMenu';\nimport { SubTypeSelectPageProps } from '../../SubTypeMenu';\n\nconst StepTypePage = (props: SubTypeSelectPageProps<string | CustomCommand>) => {\n  const definitions = useStoreState((state) => state.definitions);\n\n  return (\n    <div>\n      <header>\n        {/* <WorkflowIcon className=\"w-6 h-6 mr-1\" color=\"#6A6A6A\" /> */}\n        <BreadCrumbs />\n        <h1 className=\"ml-6 text-2xl py-3 font-bold\">Step Type</h1>\n      </header>\n      <TabbedMenu tabs={['BUILT-IN', 'COMMANDS', 'ORBS']}>\n        <div className=\"p-6\">\n          {Object.keys(commandSubtypes).map((subtype) => (\n            <button\n              key={subtype}\n              type=\"button\"\n              className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n              onClick={() => {\n                props.setSubtype(subtype);\n              }}\n            >\n              <p className=\"font-bold\">{commandSubtypes[subtype].name}</p>\n              <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                {commandSubtypes[subtype].description}\n              </p>\n            </button>\n            // <InspectorProperty name={command} label={commandProps[command].text} as=\"card\" />\n          ))}\n        </div>\n        <div className=\"p-6\">\n          {definitions.commands.map((command) => (\n            <button\n              key={command.name}\n              type=\"button\"\n              className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n              onClick={() => {\n                props.setSubtype(command);\n              }}\n            >\n              <p className=\"font-bold\">{command.name}</p>\n              <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                {/* {command.description} */}\n                Command description will show here\n              </p>\n            </button>\n            // <InspectorProperty name={command} label={commandProps[command].text} as=\"card\" />\n          ))}\n        </div>\n        <div>User defined commands will show here</div>\n        <div>Predefined orb steps will show here</div>\n      </TabbedMenu>\n    </div>\n  );\n};\n\nconst StepTypePageNav: NavigationComponent = {\n  Component: StepTypePage,\n  Label: () => <p>New Step</p>,\n};\n\nexport default StepTypePageNav;\n","import React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport { NavigationComponent } from '../../state/Store';\n\nexport type SubTypeMenuProps<T> = {\n  typePage: NavigationComponent;\n  typeProps?: object;\n  menuPage: (props: SubTypeMenuPageProps<T> & any) => JSX.Element;\n  menuProps?: object;\n  passThrough?: any;\n};\nexport type SubTypeReference<T> = T;\nexport type SubTypeSelectPageProps<T> = {\n  setSubtype: (subtype: SubTypeReference<T>) => void;\n};\nexport type SubTypeMenuPageProps<T> = {\n  subtype: SubTypeReference<T>;\n  selectSubtype: () => void;\n};\nexport interface SelectedSubType<T> {\n  current?: SubTypeReference<T>;\n  previous?: SubTypeReference<T>;\n}\n\nconst SubTypeMenu = <SubTypeRef,>(\n  props: SubTypeMenuProps<SubTypeRef> & { nonce: string },\n) => {\n  const [subtype, setSubtype] = useState<\n    Record<string, SelectedSubType<SubTypeRef>>\n  >({});\n\n  const current = subtype[props.nonce]?.current;\n\n  const updateSubtype = (selected: SubTypeReference<SubTypeRef>) => {\n    setSubtype({\n      ...subtype,\n      [props.nonce]: {\n        current: selected,\n        previous: current,\n      },\n    });\n  };\n\n  const navBack = () => {\n    setSubtype({\n      ...subtype,\n      [props.nonce]: {\n        current: undefined,\n        previous: current,\n      },\n    });\n  };\n\n  const SubTypeSelectPage = props.typePage.Component as React.FunctionComponent<\n    SubTypeSelectPageProps<SubTypeRef>\n  >;\n  const SubTypeMenuPage = props.menuPage;\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {current ? (\n        <SubTypeMenuPage\n          subtype={current}\n          selectSubtype={navBack}\n          {...props.menuProps}\n        />\n      ) : (\n        <SubTypeSelectPage {...props.typeProps} setSubtype={updateSubtype} />\n      )}\n    </div>\n  );\n};\n\nconst SubTypeMenuNav: NavigationComponent = {\n  Component: SubTypeMenu,\n  Label: <SubTypeRef,>(props: SubTypeMenuProps<SubTypeRef>) =>\n    props.typePage.Label(props),\n  Icon: <SubTypeRef,>(props: SubTypeMenuProps<SubTypeRef>) =>\n    props.typePage.Icon ? props.typePage.Icon(props) : null,\n};\n\nconst navSubTypeMenu = <SubTypeRef,>(\n  props: SubTypeMenuProps<SubTypeRef>,\n  values?: any,\n) => {\n  return {\n    component: SubTypeMenuNav,\n    props: { ...props, nonce: v4() },\n    values,\n  };\n};\n\nexport { navSubTypeMenu };\n","import { FormikValues } from 'formik';\nimport CommandMapping from '../../../mappings/CommandMapping';\nimport { useStoreActions } from '../../../state/Hooks';\nimport { DefinitionModel } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport ListProperty from '../../atoms/form/ListProperty';\nimport StepListItem from '../../atoms/form/StepListItem';\nimport { StepDefinitionMenu } from '../../menus/definitions/StepDefinitionMenu';\nimport StepTypePageNav from '../../menus/definitions/subtypes/StepTypePage';\nimport { navSubTypeMenu } from '../../menus/SubTypeMenu';\n\nconst NewButton = (\n  props: FormikValues & {\n    definitions: DefinitionModel;\n  },\n) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n        navigateTo(\n          navSubTypeMenu(\n            {\n              typePage: StepTypePageNav,\n              menuPage: StepDefinitionMenu,\n              passThrough: { dataType: CommandMapping },\n            },\n            props.values,\n          ),\n        );\n      }}\n      className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n    >\n      New\n    </button>\n  );\n};\n\nconst CommandInspector = (\n  props: FormikValues & { definitions: DefinitionModel },\n) => {\n  return (\n    <div>\n      <InspectorProperty\n        name=\"name\"\n        label=\"Name\"\n        required\n        value={props.values.name}\n      />\n      <InspectorProperty name=\"description\" label=\"Description\" as=\"textarea\" />\n      <ListProperty\n        label=\"Steps\"\n        name=\"steps\"\n        values={props.values}\n        expanded\n        required\n        emptyText=\"No steps defined yet. At least one step is required.\"\n        listItem={StepListItem}\n        titleExpanded={\n          <NewButton values={props.values} definitions={props.definitions} />\n        }\n      />\n    </div>\n  );\n};\n\nexport default CommandInspector;\n","import { ReusableExecutor } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Reusable';\nimport { SubTypeMapping } from '../../../../mappings/ComponentMapping';\nimport InspectorProperty from '../../../atoms/form/InspectorProperty';\n\nexport interface ComponentParameterType {\n  types: string[];\n}\n\nexport interface ParameterTypes {\n  [key: string]: SubTypeMapping;\n}\n\nexport interface ComponentParameterMapping {\n  pipeline: ComponentParameterType;\n  executor: ComponentParameterType;\n  job: ComponentParameterType;\n  command: ComponentParameterType;\n}\n\nconst parameterSubtypes: ParameterTypes = {\n  string: {\n    text: 'String',\n    description: `Sequence of characters that are optionally enlcosed by quotes.\n      Empty strings are treated as falsey while in evaluation of when clauses, and non-empty strings are treated as truthy.`,\n    fields: (\n      <InspectorProperty\n        name=\"defaultValue\"\n        as=\"textarea\"\n        label=\"Default Value\"\n      />\n    ),\n  },\n  boolean: {\n    text: 'Boolean',\n    description: `A Boolean represents a true/false value. Such as \"on\" or \"off\".`,\n\n    fields: (\n      <InspectorProperty name=\"defaultValue\" as=\"select\" label=\"Default Value\">\n        <option value=\"undefined\">No default</option>\n        <option value=\"false\">false</option>\n        <option value=\"true\">true</option>\n      </InspectorProperty>\n    ),\n  },\n  integer: {\n    text: 'Integer',\n    description: `Integers can be formatted using the familiar decimal notation.\n       Or have various formats such as having a leading “0x” to signal hexadecimal,\n        a leading “0b” to indicate binary bits (base 2), or have leading “0” to signal an octal base.\n        The use of “:” allows expressing integers in base 60, which is convenient for time/angle values.`,\n\n    fields: (\n      <InspectorProperty\n        name=\"defaultValue\"\n        as=\"number\"\n        label=\"Default Value\"\n      />\n    ),\n  },\n  enum: {\n    text: 'Enum',\n    description: `Enums allow to define a list of any values,\n       which are useful in the case to enforce that the value must be one from a specific set of string values`,\n\n    fields: <input type=\"text\" />,\n  },\n  executor: {\n    text: 'Executor',\n    fields: (props: { executors: ReusableExecutor[] }) => (\n      <InspectorProperty\n        label=\"Executor\"\n        as=\"select\"\n        name=\"executor.name\"\n        required\n      >\n        {props.executors?.map((executor) => (\n          <option value={executor.name} key={executor.name}>\n            {executor.name}\n          </option>\n        ))}\n      </InspectorProperty>\n    ),\n  },\n  steps: {\n    text: 'Steps',\n    fields: <input type=\"text\" />,\n  },\n  env_var_name: {\n    text: 'Environment Variable Name',\n    fields: <input type=\"text\" />,\n  },\n};\n\nconst componentParametersSubtypes: ComponentParameterMapping = {\n  pipeline: {\n    types: ['string', 'boolean', 'integer', 'enum'],\n  },\n  executor: { types: ['string', 'boolean', 'integer', 'enum'] },\n  job: {\n    types: [\n      'string',\n      'boolean',\n      'integer',\n      'enum',\n      'executor',\n      'steps',\n      'env_var_name',\n    ],\n  },\n  command: {\n    types: ['string', 'boolean', 'integer', 'enum', 'steps', 'env_var_name'],\n  },\n};\n\nexport { componentParametersSubtypes, parameterSubtypes };\n","import { parsers } from '@circleci/circleci-config-sdk';\nimport { CustomCommand } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Commands/exports/Reusable';\nimport CommandSummary from '../components/atoms/summaries/CommandSummary';\nimport CommandInspector from '../components/containers/inspector/CommandInspector';\nimport { componentParametersSubtypes } from '../components/containers/inspector/subtypes/ParameterSubtypes';\nimport CommandIcon from '../icons/components/CommandIcon';\nimport ComponentMapping from './ComponentMapping';\n\nconst CommandMapping: ComponentMapping<CustomCommand> = {\n  type: 'commands',\n  name: {\n    singular: 'Command',\n    plural: 'Commands',\n  },\n  defaults: {\n    name: 'new-command',\n    steps: [],\n  },\n  parameters: componentParametersSubtypes.command,\n  transform: ({ name, ...values }, definitions) => {\n    return parsers.parseCustomCommand(name, values, definitions.commands);\n  },\n  store: {\n    get: (state) => state.definitions.commands,\n    add: (actions) => actions.defineCommand,\n    update: (actions) => actions.updateCommand,\n    remove: (actions) => actions.undefineCommand,\n  },\n  components: {\n    icon: CommandIcon,\n    summary: CommandSummary,\n    inspector: CommandInspector,\n  },\n  docsInfo: {\n    description:\n      'A command defines a sequence of steps to be executed in a job.',\n    link: 'https://circleci.com/docs/2.0/reusing-config/#the-commands-key',\n  },\n};\n\nexport default CommandMapping;\n","import { IconProps } from '../IconProps';\n\nconst ExecutorIcon = (props: IconProps & { type?: string }) => (\n  <svg viewBox=\"0 0 96 96\" className={props.className}>\n    <g id=\"Layer_1\" data-name=\"Layer 1\">\n      <path d=\"M85.93,30h-76a6,6,0,0,1-6-6V12a6,6,0,0,1,6-6h76a6,6,0,0,1,6,6V24A6,6,0,0,1,85.93,30Zm-76-20a2,2,0,0,0-2,2V24a2,2,0,0,0,2,2h76a2,2,0,0,0,2-2V12a2,2,0,0,0-2-2Z\" />\n      <path d=\"M85.93,90h-76a6,6,0,0,1-6-6V72a6,6,0,0,1,6-6h76a6,6,0,0,1,6,6V84A6,6,0,0,1,85.93,90Zm-76-20a2,2,0,0,0-2,2V84a2,2,0,0,0,2,2h76a2,2,0,0,0,2-2V72a2,2,0,0,0-2-2Z\" />\n      <path d=\"M85.93,60h-76a6,6,0,0,1-6-6V42a6,6,0,0,1,6-6h76a6,6,0,0,1,6,6V54A6,6,0,0,1,85.93,60Zm-76-20a2,2,0,0,0-2,2V54a2,2,0,0,0,2,2h76a2,2,0,0,0,2-2V42a2,2,0,0,0-2-2Z\" />\n      <circle cx=\"19.93\" cy=\"18\" r=\"4\" />\n      <circle cx=\"19.93\" cy=\"48\" r=\"4\" />\n      <circle cx=\"19.93\" cy=\"78\" r=\"4\" />\n      <path d=\"M77.93,20h-48a2,2,0,0,1,0-4h48a2,2,0,0,1,0,4Z\" />\n      <path d=\"M77.93,50h-48a2,2,0,0,1,0-4h48a2,2,0,0,1,0,4Z\" />\n      <path d=\"M77.93,80h-48a2,2,0,0,1,0-4h48a2,2,0,0,1,0,4Z\" />\n    </g>\n  </svg>\n);\n\nexport default ExecutorIcon;\n","import { ReusableExecutor } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Reusable';\nimport ExecutorIcon from '../../../icons/components/ExecutorIcon';\n\nconst ExecutorSummary: React.FunctionComponent<{ data: ReusableExecutor }> = (\n  props,\n) => {\n  return (\n    <div className=\"flex flex-row\">\n      <ExecutorIcon className=\"ml-1 mr-2 w-5 h-5\" /> {props.data.name}\n    </div>\n  );\n};\n\nexport default ExecutorSummary;\n","import { executors } from '@circleci/circleci-config-sdk';\nimport { SubTypeMapping } from '../../../../mappings/ComponentMapping';\nimport InspectorProperty from '../../../atoms/form/InspectorProperty';\n\nexport interface ExecutorSubTypes {\n  [type: string]: SubTypeMapping & {\n    resourceClasses: string[];\n  };\n}\n\nconst executorSubtypes: ExecutorSubTypes = {\n  docker: {\n    text: 'Docker',\n    component: executors.DockerExecutor,\n    resourceClasses: [\n      'small',\n      'medium',\n      'medium+',\n      'large',\n      'xlarge',\n      '2xlarge',\n      '2xlarge+',\n    ],\n    fields: (\n      <InspectorProperty label=\"Image\" name=\"docker[0].image\" required />\n    ),\n    docsLink: 'https://circleci.com/docs/2.0/executor-types/#using-docker',\n    description: 'Steps run in container with provided image',\n  },\n  machine: {\n    text: 'Machine',\n    component: executors.MachineExecutor,\n    resourceClasses: ['medium', 'large', 'xlarge', '2xlarge'],\n    fields: <InspectorProperty label=\"Image\" name=\"machine.image\" required />,\n    docsLink: 'https://circleci.com/docs/2.0/executor-types/#using-machine',\n    description: 'Steps run on Linux Virtual Machine',\n  },\n  macos: {\n    text: 'MacOS',\n    component: executors.MacOSExecutor,\n    resourceClasses: ['medium', 'large'],\n    fields: <InspectorProperty label=\"Xcode\" name=\"macos.xcode\" required />,\n    docsLink: 'https://circleci.com/docs/2.0/executor-types/#using-macos',\n    description:\n      'Steps run on macOS Virtual Machine with specific Xcode version',\n  },\n  windows: {\n    text: 'Windows',\n    component: executors.WindowsExecutor,\n    resourceClasses: ['windows.medium', 'windows.large', 'windows.xlarge', 'windows.2xlarge'],\n    fields: <InspectorProperty label=\"Image\" name=\"machine.image\" required />,\n    docsLink:\n      'https://circleci.com/docs/2.0/executor-types/#using-the-windows-executor',\n    description: 'Steps run on Windows Virtual Machine',\n  },\n};\n\nexport { executorSubtypes };\n","import { FormikValues } from 'formik';\nimport { DefinitionModel } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport { executorSubtypes } from './subtypes/ExecutorSubtypes';\n\nconst ExecutorInspector = (\n  props: FormikValues & {\n    definitions: DefinitionModel;\n    subtype?: string;\n  },\n) => {\n  if (!props.subtype) {\n    return <p>Something went wrong!</p>;\n  }\n\n  return (\n    <>\n      <InspectorProperty label=\"Name\" name=\"name\" required />\n      <InspectorProperty\n        label=\"Description\"\n        name={`description`}\n        as=\"textarea\"\n      />\n      <InspectorProperty\n        label=\"Resource Class\"\n        name=\"resource_class\"\n        required\n        as=\"select\"\n      >\n        {executorSubtypes[props.subtype]?.resourceClasses?.map(\n          (resourceClass) => (\n            <option value={resourceClass} key={resourceClass}>\n              {resourceClass}\n            </option>\n          ),\n        )}\n      </InspectorProperty>\n      {executorSubtypes[props.subtype]?.fields}\n      <InspectorProperty label=\"Shell\" name={`shell`} />\n      <InspectorProperty label=\"Working Directory\" name={`working_directory`} />\n    </>\n  );\n};\n\nexport default ExecutorInspector;\n","export interface CardProps {\n  description?: string;\n  title: string;\n  icon?: React.ReactElement;\n  pinned?: React.ReactElement;\n  truncate?: number;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nconst Card = ({ truncate, description, ...props }: CardProps) => {\n  return (\n    <div className=\"pb-4\">\n      <button\n        type=\"button\"\n        className=\"p-4 w-full border-circle-gray-300 border rounded text-left hover:border-circle-gray-700 max-h-36\"\n        onClick={props.onClick}\n      >\n        <div className=\"flex flex-row\">\n          {props.icon}\n          <p className=\"font-bold\">{props.title}</p>\n          <div className=\"ml-auto z-10\">{props.pinned}</div>\n        </div>\n        {description && (\n          <p className=\"text-sm mt-1 leading-4 text-circle-gray-500 overflow-ellipsis max-h-32 overflow-hidden\">\n            {truncate && description.length > truncate\n              ? description?.slice(0, truncate) + '...'\n              : description}\n          </p>\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default Card;\n","import ExecutorIcon from '../../../../icons/components/ExecutorIcon';\nimport { NavigationComponent } from '../../../../state/Store';\nimport BreadCrumbs from '../../../containers/BreadCrumbs';\nimport { executorSubtypes } from '../../../containers/inspector/subtypes/ExecutorSubtypes';\nimport { SubTypeSelectPageProps } from '../../SubTypeMenu';\nimport Card from '../../../atoms/Card';\n\nconst ExecutorTypePage = (props: SubTypeSelectPageProps<string>) => {\n  return (\n    <div>\n      <header>\n        <BreadCrumbs />\n        <div className=\"ml-6 flex py-3\">\n          <ExecutorIcon className=\"w-8 h-8 p-1 pl-0 mr-1\"></ExecutorIcon>\n          <h1 className=\"text-2xl font-bold\">New Executor</h1>\n        </div>\n        <div className=\"flex border-b border-circle-gray-300 pl-6\">\n          <div\n            className={`text-sm tracking-wide px-3 py-3 font-bold text-center 'border-black border-b-4 border-black text-circle-black`}\n          >\n            TYPE\n          </div>\n        </div>\n      </header>\n      <div className=\"p-6\">\n        {Object.keys(executorSubtypes).map((subtype) => (\n          <Card\n            key={subtype}\n            description={executorSubtypes[subtype].description}\n            title={executorSubtypes[subtype].text}\n            onClick={() => {\n              props.setSubtype(subtype);\n            }}\n            pinned={\n              <div>\n                {executorSubtypes[subtype].docsLink && (\n                  <a\n                    className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n                    href={executorSubtypes[subtype].docsLink}\n                    target=\"circleci_docs\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                    }}\n                  >\n                    Learn More\n                  </a>\n                )}\n              </div>\n            }\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst ExecutorTypePageNav: NavigationComponent = {\n  Component: ExecutorTypePage,\n  Label: (props: SubTypeSelectPageProps<string>) => <p>New Executor</p>,\n  Icon: (props: SubTypeSelectPageProps<string>) => (\n    <ExecutorIcon className=\"w-6 h-8 py-2\" />\n  ),\n};\n\nexport default ExecutorTypePageNav;\n","import { IconProps } from '../IconProps';\n\nconst JobIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 24 24\" className={props.className}>\n    <path d=\"M12.458388,3 C17.7284428,3 22,7.25487688 22,12.5009275 C22,17.7469783 17.7286827,22 12.458388,22 C9.24779218,22 6.40748266,20.4195905 4.67890641,17.9975161 L4.51046025,18 C5.52650577,18 6.4784703,17.7267799 7.29630887,17.2500927 C8.5797622,18.6332003 10.4175246,19.5 12.4581919,19.5 C16.3422622,19.5 19.4895397,16.3667214 19.4895397,12.5010252 C19.4895397,8.63532901 16.3417423,5.5 12.4581919,5.5 C10.4182181,5.5 8.58077831,6.36686635 7.29682565,7.75083018 C6.52574446,7.30040157 5.63375878,7.03136434 4.68109466,7.00257493 C6.40892952,4.58026814 9.24869152,3 12.458388,3 Z M12.4596333,9.00000001 C14.4011972,9.00000001 15.9748954,10.5675188 15.9748954,12.5003076 C15.9748954,14.4330964 14.4012513,16 12.4596333,16 C11.2973265,16 10.266758,15.437833 9.62706371,14.5716975 C9.88962048,13.931837 10.0334728,13.2326478 10.0334728,12.5 C10.0334728,11.767055 9.88950371,11.0675956 9.62819064,10.4281361 C10.2669454,9.56228031 11.2974499,9.00000001 12.4596333,9.00000001 Z M4.50987191,10 C5.89718507,10 7.0209205,11.1200937 7.0209205,12.5002929 C7.0209205,13.8804921 5.89718507,15 4.50987191,15 C3.12373543,15 2,13.8804921 2,12.5002929 C2,11.1200937 3.12373543,10 4.50987191,10 Z\" />\n  </svg>\n);\n\nexport default JobIcon;\n","import { IconProps } from '../IconProps';\n\nconst JobOnHoldIcon = (props: IconProps) => (\n  <svg\n    role=\"img\"\n    focusable=\"false\"\n    viewBox=\"0 0 24 24\"\n    aria-label=\"Status On Hold\"\n    fill=\"#8e62bd\"\n    className={props.className}\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 Z M11,16 L9,16 L9,8 L11,8 L11,16 Z M15,16 L13,16 L13,8 L15,8 L15,16 Z\"\n    ></path>\n  </svg>\n);\n\nexport default JobOnHoldIcon;\n","import { IconProps } from '../IconProps';\n\nconst MinusIcon = (props: IconProps & { filled: boolean }) => (\n  <svg viewBox=\"0 0 24 24\" className={props.className}>\n    {props.filled ? (\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM16 13C16.5523 13 17 12.5523 17 12C17 11.4477 16.5523 11 16 11H7.99997C7.44769 11 6.99997 11.4477 6.99997 12C6.99997 12.5523 7.44769 13 7.99997 13H16Z\"\n        fill={props.color}\n      />\n    ) : (\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.02942 12C4.02942 7.58172 7.61114 4 12.0294 4C16.4477 4 20.0294 7.58172 20.0294 12C20.0294 16.4183 16.4477 20 12.0294 20C7.61114 20 4.02942 16.4183 4.02942 12ZM12.0294 2C6.50657 2 2.02942 6.47715 2.02942 12C2.02942 17.5228 6.50657 22 12.0294 22C17.5523 22 22.0294 17.5228 22.0294 12C22.0294 6.47715 17.5523 2 12.0294 2ZM16.022 13.0294C16.5743 13.0335 17.0253 12.589 17.0294 12.0368C17.0334 11.4845 16.589 11.0335 16.0367 11.0294L8.03675 10.9706C7.48448 10.9665 7.03348 11.4109 7.02942 11.9632C7.02535 12.5155 7.46976 12.9665 8.02203 12.9705L16.022 13.0294Z\"\n        fill={props.color}\n      />\n    )}\n  </svg>\n);\n\nexport default MinusIcon;\n","import { IconProps } from '../IconProps';\n\nconst PlusIcon = (props: IconProps & { filled: boolean }) => (\n  <svg\n    viewBox={`0 0 ${props.filled ? '20 20' : '16 16'}`}\n    className={props.className}\n  >\n    {props.filled ? (\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11 9V6C11 5.44772 10.5523 5 10 5C9.44771 5 9 5.44772 9 6V9H6C5.44772 9 5 9.44771 5 10C5 10.5523 5.44772 11 6 11H9V14C9 14.5523 9.44771 15 10 15C10.5523 15 11 14.5523 11 14V11H14C14.5523 11 15 10.5523 15 10C15 9.44771 14.5523 9 14 9H11ZM10 0C15.52 0 20 4.48 20 10C20 15.52 15.52 20 10 20C4.48 20 0 15.52 0 10C0 4.48 4.48 0 10 0Z\"\n        fill={props.color}\n      />\n    ) : (\n      <g>\n        <mask\n          id=\"mask0_266_8047\"\n          maskUnits=\"userSpaceOnUse\"\n          x=\"0\"\n          y=\"0\"\n          width=\"16\"\n          height=\"16\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M8.66764 7.33357V5.33357C8.66764 4.96538 8.36916 4.66691 8.00097 4.66691C7.63278 4.66691 7.33431 4.96538 7.33431 5.33357V7.33357H5.33431C4.96612 7.33357 4.66764 7.63205 4.66764 8.00024C4.66764 8.36843 4.96612 8.66691 5.33431 8.66691H7.33431V10.6669C7.33431 11.0351 7.63278 11.3336 8.00097 11.3336C8.36916 11.3336 8.66764 11.0351 8.66764 10.6669V8.66691H10.6676C11.0358 8.66691 11.3343 8.36843 11.3343 8.00024C11.3343 7.63205 11.0358 7.33357 10.6676 7.33357H8.66764ZM8.00065 1.8335C4.59679 1.8335 1.83398 4.59631 1.83398 8.00016C1.83398 11.404 4.59679 14.1668 8.00065 14.1668C11.4045 14.1668 14.1673 11.404 14.1673 8.00016C14.1673 4.59631 11.4045 1.8335 8.00065 1.8335ZM0.833984 8.00016C0.833984 4.04402 4.04451 0.833496 8.00065 0.833496C11.9568 0.833496 15.1673 4.04402 15.1673 8.00016C15.1673 11.9563 11.9568 15.1668 8.00065 15.1668C4.04451 15.1668 0.833984 11.9563 0.833984 8.00016Z\"\n            fill=\"white\"\n          />\n        </mask>\n        <g mask=\"url(#mask0_266_8047)\">\n          <rect width=\"16\" height=\"16\" fill={props.color} />\n        </g>\n      </g>\n    )}\n  </svg>\n);\n\nexport default PlusIcon;\n","import { orb, reusable } from '@circleci/circleci-config-sdk';\nimport { WorkflowJob } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow';\nimport { Form, Formik } from 'formik';\nimport JobIcon from '../../../icons/components/JobIcon';\nimport { useStoreActions } from '../../../state/Hooks';\nimport { NavigationComponent } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport ParamListContainer from '../../containers/ParamListContainer';\nimport TabbedMenu from '../TabbedMenu';\n\ntype WorkflowJobMenuProps = {\n  job: WorkflowJob;\n};\n\nconst StagedJobMenu = ({ job }: WorkflowJobMenuProps) => {\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n  // const navigateTo = useStoreActions((actions) => actions.navigateTo);\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <header>\n        <BreadCrumbs />\n        <h1 className=\"ml-6 text-2xl py-2 font-bold\">Edit Staged Job</h1>\n      </header>\n      <Formik\n        initialValues={{\n          name: job.name,\n          parameters: { name: undefined, ...job.parameters },\n        }}\n        enableReinitialize={true}\n        onSubmit={(values) => {\n          job.parameters = values.parameters;\n\n          navigateBack({\n            distance: 1,\n          });\n        }}\n      >\n        {(formikProps) => (\n          <Form className=\"flex flex-col flex-1\">\n            <TabbedMenu tabs={['PROPERTIES']}>\n              <div className=\"p-6\">\n                <InspectorProperty type=\"button\" name=\"name\" label=\"Source Job\">\n                  <button\n                    className=\"w-full mb-2 p-2 text-sm cursor-pointer text-left text-circle-black \n      bg-white border border-circle-gray-300 rounded-md2 flex flex-row\"\n                  >\n                    <JobIcon className=\"ml-1 mr-2 w-5 h-5\" />\n                    <p className=\"leading-5\">{job.name}</p>\n                  </button>\n                </InspectorProperty>\n                <InspectorProperty\n                  name=\"parameters.name\"\n                  label=\"Name\"\n                  placeholder={job.name}\n                />\n                {/**\n                  TODO: Replace with collapsible list\n                  <button\n                  type=\"button\"\n                  className=\" text-sm font-medium p-2 w-full bg-circle-gray-200 duration:50 transition-all rounded-md2\"\n                  onClick={() => {\n                    navigateTo({\n                      component: StagedFilterMenuNav,\n                      props: { job },\n                      origin: true,\n                    });\n                  }}\n                >\n                  Edit Filters\n                </button> */}\n                {(job.job instanceof reusable.ParameterizedJob ||\n                  job.job instanceof orb.OrbRef) && (\n                  <ParamListContainer\n                    parent=\"parameters\"\n                    paramList={job.job.parameters}\n                  ></ParamListContainer>\n                )}\n              </div>\n            </TabbedMenu>\n\n            <span className=\"border-b border-circle-gray-300 mt-auto\" />\n            <button\n              type=\"submit\"\n              className=\"text-white text-sm font-medium p-2 m-6 bg-circle-blue duration:50 transition-all rounded-md2\"\n            >\n              Save Staged Job\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst StagedJobMenuNav: NavigationComponent = {\n  Component: StagedJobMenu,\n  Label: (props: WorkflowJobMenuProps) => {\n    return <p>{props.job.parameters?.name || props.job.name}</p>;\n  },\n  Icon: (props: WorkflowJobMenuProps) => {\n    return <JobIcon className=\"w-6 h-8 py-2\" />;\n  },\n};\n\nexport { StagedJobMenu, StagedJobMenuNav };\n","import { Job, types, workflow } from '@circleci/circleci-config-sdk';\nimport { WorkflowJob } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow';\nimport React, { useRef } from 'react';\nimport { Handle, isNode, NodeProps, Position } from 'react-flow-renderer';\nimport JobIcon from '../../../icons/components/JobIcon';\nimport JobOnHoldIcon from '../../../icons/components/JobOnHoldIcon';\nimport DeleteItemIcon from '../../../icons/ui/DeleteItemIcon';\nimport MinusIcon from '../../../icons/ui/MinusIcon';\nimport PlusIcon from '../../../icons/ui/PlusIcon';\nimport JobMapping from '../../../mappings/JobMapping';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { StagedJobMenuNav } from '../../menus/stage/StagedJobMenu';\n\nconst ConnectorIcon = (props: { filled: boolean; subtraction?: boolean }) => {\n  return (\n    <>\n      {props.subtraction ? (\n        <MinusIcon\n          filled={props.filled}\n          color=\"rgb(150, 0, 8)\"\n          className=\"bg-white rounded-full w-full border border-white\"\n        />\n      ) : (\n        <PlusIcon\n          filled={props.filled}\n          color=\"rgb(0, 120, 202)\"\n          className=\"bg-white rounded-full w-full border border-white\"\n        />\n      )}\n    </>\n  );\n};\n\nconst JobNode: React.FunctionComponent<\n  NodeProps & { data: workflow.WorkflowJob }\n> = (props) => {\n  const elements = useStoreState(\n    (state) => state.workflows[state.selectedWorkflow].elements,\n  );\n  const dragging = useStoreState((state) => state.dragging);\n  // const setWorkflowElements = useStoreActions(\n  //   (actions) => actions.setWorkflowElements,\n  // );\n  const updateJob = useStoreActions((actions) => actions.updateJob);\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const setConnecting = useStoreActions((actions) => actions.setConnecting);\n  const toolbox = useStoreState((state) => state.previewToolbox);\n  const altAction = useStoreState((state) => state.altAction);\n  const removeWorkflowElement = useStoreActions(\n    (actions) => actions.removeWorkflowElement,\n  );\n\n  const connecting = useStoreState((state) => state.connecting);\n  const updateConnecting = useStoreActions(\n    (actions) => actions.updateConnecting,\n  );\n\n  const updateWorkflowJob = (\n    workflowJob: workflow.WorkflowJob,\n    applyToData: {\n      job?: Job;\n      parameters?: types.workflow.WorkflowJobParameters;\n    },\n  ) =>\n    elements.map((element) =>\n      isNode(element) && element.data.job.name === workflowJob.job.name\n        ? { ...element, data: { ...workflowJob, ...applyToData } }\n        : element,\n    );\n  const [hovering, setHovering] = React.useState({\n    handles: false,\n    node: false,\n    requiredBy: false,\n    remove: false,\n    requires: false,\n  });\n\n  let filtered = false;\n\n  const job = props.data as WorkflowJob;\n  const filters = job.parameters?.filters;\n\n  if (filters && toolbox.filter.preview && filters[toolbox.filter.type]) {\n    const jobFilter = filters[toolbox.filter.type];\n    const pattern = toolbox.filter.pattern;\n    const ignoreFilter = jobFilter?.ignore?.includes(pattern);\n    const onlyFilter = jobFilter?.only?.includes(pattern);\n\n    filtered = ignoreFilter || !onlyFilter;\n  }\n\n  const jobIcon = (isApproval: boolean = false) => {\n    const classNameValue = 'w-5 mr-2';\n    if (isApproval) {\n      return <JobOnHoldIcon className={classNameValue} />;\n    } else {\n      return <JobIcon className={classNameValue} />;\n    }\n  };\n\n  const trackHovering = (\n    entering: string[],\n    leaving: string[],\n    postEnter?: () => void,\n    postLeave?: () => void,\n  ) => {\n    return {\n      onMouseEnter: () => {\n        setHovering(\n          entering.reduce(\n            (previous, n) => ({ ...previous, [n]: true }),\n            hovering,\n          ),\n        );\n        postEnter && postEnter();\n      },\n      onMouseLeave: () => {\n        setHovering(\n          leaving.reduce(\n            (previous, n) => ({ ...previous, [n]: false }),\n            hovering,\n          ),\n        );\n        postLeave && postLeave();\n      },\n    };\n  };\n\n  const nodeRef = useRef(null);\n  const startConnecting =\n    (side: 'source' | 'target') => (e: React.DragEvent<HTMLButtonElement>) => {\n      setConnecting({\n        ref: nodeRef,\n        id: {\n          connectionNodeId: props.id,\n          connectionHandleType: side,\n          connectionHandleId: `${props.id}_${side}`,\n        },\n        name: props.data.parameters?.name || props.data.name,\n      });\n      e.preventDefault();\n    };\n\n  return (\n    <div\n      className={`p-8 flex flex-row cursor-default`}\n      {...trackHovering(\n        ['handles'],\n        ['handles', 'node', 'requires', 'requiredBy'],\n        () => {\n          const startType = connecting?.start?.id.connectionHandleType;\n          const side = startType === 'source' ? 'target' : 'source';\n          updateConnecting({\n            ref: nodeRef,\n            id: {\n              connectionNodeId: props.id,\n              connectionHandleType: side,\n              connectionHandleId: `${props.id}_${side}`,\n            },\n            name: props.data.parameters?.name || props.data.name,\n          });\n        },\n        () => {\n          updateConnecting(undefined);\n        },\n      )}\n      onDragOver={(e) => {\n        if (dragging && dragging.dataType?.dragTarget === JobMapping.type) {\n          e.preventDefault();\n        }\n      }}\n      onDrop={(e) => {\n        if (\n          dragging &&\n          dragging.dataType?.dragTarget === JobMapping.type &&\n          dragging.dataType.applyToNode\n        ) {\n          const applyToData = dragging.dataType.applyToNode(\n            dragging.data,\n            props.data,\n          );\n\n          if (JobMapping.type in applyToData) {\n            updateJob({ old: props.data.job, new: applyToData.job });\n          }\n\n          if ('parameters' in applyToData) {\n            updateWorkflowJob(props.data, applyToData);\n          }\n        }\n      }}\n    >\n      <button\n        className={`opacity-${\n          hovering['handles'] && !hovering['node'] && !connecting?.start\n            ? 100\n            : 0\n        } transition-opacity duration-300 w-4 h-4 my-auto mr-5`}\n        id={`${props.id}_source`}\n        {...trackHovering(['requires', 'handles'], ['requires'])}\n        draggable\n        onDragStart={startConnecting('target')}\n      >\n        <ConnectorIcon filled={hovering['requires']} subtraction={altAction} />\n      </button>\n\n      <div\n        className={`p-2 bg-white node flex flex-row text-black rounded-md border cursor-pointer ${\n          filtered ? 'bg-gray-200 opacity-60' : 'opacity-100'\n        }\n        ${\n          (hovering['node'] && !hovering['remove']) ||\n          (hovering['handles'] && connecting?.start)\n            ? 'border-circle-blue'\n            : 'border-circle-gray-300'\n        }`}\n        ref={nodeRef}\n        {...trackHovering(['node'], ['node'])}\n      >\n        <button\n          className=\"flex w-full\"\n          onClick={() => {\n            navigateTo({\n              component: StagedJobMenuNav,\n              props: { job: props.data },\n              origin: true,\n            });\n          }}\n        >\n          {jobIcon(props.data.parameters?.type === 'approval')}\n          {props.data.parameters?.name || props.data.name}\n        </button>\n        <button\n          className={`my-auto\n          opacity-${hovering['node'] ? 100 : 0}\n          transition-opacity duration-150 w-8 h-full flex`}\n          {...trackHovering(['remove'], ['remove'])}\n          onClick={() => {\n            removeWorkflowElement(props.id);\n          }}\n        >\n          <DeleteItemIcon\n            className=\"w-3 cursor-pointer m-auto\"\n            color={hovering['remove'] ? 'red' : '#AAAAAA'}\n          />\n        </button>\n      </div>\n\n      <button\n        className={`opacity-${\n          hovering['handles'] && !hovering['node'] && !connecting?.start\n            ? 100\n            : 0\n        } source transition-opacity duration-300 w-4 h-4 my-auto ml-5`}\n        {...trackHovering(['requiredBy', 'handles'], ['requiredBy'])}\n        id={`${props.id}_target`}\n        // onClick={() => {--\n        // TODO: Implement 'add job' menu functionality\n        // }}\n        draggable\n        onDragStart={startConnecting('source')}\n      >\n        <ConnectorIcon\n          filled={hovering['requiredBy']}\n          subtraction={altAction}\n        />\n      </button>\n\n      <Handle\n        type=\"source\"\n        className=\"opacity-0 cursor-default\"\n        position={Position.Right}\n        id={`${props.id}_source`}\n      ></Handle>\n      <Handle\n        className=\"opacity-0 cursor-default\"\n        id={`${props.id}_target`}\n        type=\"target\"\n        position={Position.Left}\n      />\n    </div>\n  );\n};\n\nexport default JobNode;\n","import { executors, Job } from '@circleci/circleci-config-sdk';\nimport { FormikValues, useField } from 'formik';\nimport DeleteItemIcon from '../../../icons/ui/DeleteItemIcon';\nimport JobMapping from '../../../mappings/JobMapping';\nimport { useStoreActions } from '../../../state/Hooks';\nimport { DefinitionModel } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport ListProperty from '../../atoms/form/ListProperty';\nimport StepListItem from '../../atoms/form/StepListItem';\nimport { StepDefinitionMenu } from '../../menus/definitions/StepDefinitionMenu';\nimport StepTypePageNav from '../../menus/definitions/subtypes/StepTypePage';\nimport { navSubTypeMenu } from '../../menus/SubTypeMenu';\nimport CollapsibleList from '../CollapsibleList';\nimport ParamListContainer from '../ParamListContainer';\n\nexport type JobInspectorProps = FormikValues & { definitions: DefinitionModel };\n\nconst getEmbeddedExecutor = (values: any) => {\n  const executorKeys = ['machine', 'macos', 'docker'];\n\n  return Object.keys(values).find((key) => executorKeys.includes(key));\n};\n\nconst EmbeddedExecutor = ({\n  embeddedExecutor,\n  definitions,\n  data,\n  values,\n  ...props\n}: { embeddedExecutor: string; data: Job } & JobInspectorProps) => {\n  const defineExecutor = useStoreActions((actions) => actions.defineExecutor);\n  const embeddedHelper = useField({\n    name: embeddedExecutor,\n    ...props,\n  })[2];\n  const executor = useField({\n    name: 'executor.name',\n    ...props,\n  })[2];\n\n  return (\n    <>\n      <div className=\"flex flex-row\">\n        <p className=\"font-bold leading-5 tracking-wide\">Executor</p>\n        <button\n          type=\"button\"\n          className=\"ml-auto tracking-wide leading-6 text-sm text-circle-blue font-medium  \"\n          onClick={() => {\n            if (!(data.executor instanceof executors.Executor)) {\n              return;\n            }\n\n            const name = data.name + '-exec-export';\n            embeddedHelper.setValue(undefined);\n            defineExecutor(data.executor.asReusable(name));\n            executor.setValue(name);\n          }}\n        >\n          Export as Definition\n        </button>\n      </div>\n      <div className=\"px-3 py-2 my-2 bg-circle-gray-200 border w-full border-circle-gray-300 rounded flex flex-row\">\n        Embedded {embeddedExecutor}\n        <button\n          onClick={() => {\n            embeddedHelper.setValue(undefined);\n            executor.setValue('Select Executor');\n          }}\n          type=\"button\"\n          className=\"my-auto ml-auto\"\n        >\n          <DeleteItemIcon className=\"w-3 h-3\" color=\"#AAAAAA\" />\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst JobInspector = ({ data, definitions, ...props }: JobInspectorProps) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const embeddedExecutor = getEmbeddedExecutor(props.values);\n\n  return (\n    <div>\n      <InspectorProperty label=\"Name\" name=\"name\" required />\n      {embeddedExecutor ? (\n        <EmbeddedExecutor\n          embeddedExecutor={embeddedExecutor}\n          definitions={definitions}\n          data={data}\n          {...props}\n        />\n      ) : (\n        <>\n          <InspectorProperty\n            label=\"Executor\"\n            as=\"select\"\n            name=\"executor.name\"\n            className=\"w-full\"\n            required\n            dependent={(executorName) => {\n              const executor = definitions.executors.find(\n                (exec) => exec.name === executorName,\n              );\n\n              return (\n                <>\n                  {executor?.parameters && (\n                    <>\n                      <CollapsibleList title=\"Properties\" expanded>\n                        <div className=\"pt-2\">\n                          <ParamListContainer\n                            paramList={executor.parameters}\n                            parent=\"executor\"\n                          />\n                        </div>\n                      </CollapsibleList>\n                      <div className=\"w-full border-b border-circle-gray-300 my-2\"></div>\n                    </>\n                  )}\n                </>\n              );\n            }}\n          >\n            {[{ name: 'Select Executor' }, ...definitions.executors].map(\n              (executor) => (\n                <option value={executor.name} key={executor.name}>\n                  {executor.name}\n                </option>\n              ),\n            )}\n          </InspectorProperty>\n        </>\n      )}\n\n      <ListProperty\n        label=\"Steps\"\n        name=\"steps\"\n        values={props.values}\n        expanded\n        required\n        listItem={StepListItem}\n        emptyText=\"No steps defined yet.\"\n        titleExpanded={\n          <button\n            type=\"button\"\n            onClick={() => {\n              navigateTo(\n                navSubTypeMenu(\n                  {\n                    typePage: StepTypePageNav,\n                    menuPage: StepDefinitionMenu,\n                    passThrough: { dataType: JobMapping },\n                  },\n                  props.values,\n                ),\n              );\n            }}\n            className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n          >\n            New\n          </button>\n        }\n      ></ListProperty>\n    </div>\n  );\n};\n\nexport default JobInspector;\n","import { Job, parsers, workflow } from '@circleci/circleci-config-sdk';\nimport JobNode from '../components/atoms/nodes/JobNode';\nimport JobSummary from '../components/atoms/summaries/JobSummary';\nimport JobInspector from '../components/containers/inspector/JobInspector';\nimport { componentParametersSubtypes } from '../components/containers/inspector/subtypes/ParameterSubtypes';\nimport JobIcon from '../icons/components/JobIcon';\nimport ComponentMapping from './ComponentMapping';\n\nconst JobMapping: ComponentMapping<Job, workflow.WorkflowJob> = {\n  type: 'jobs',\n  name: {\n    singular: 'Job',\n    plural: 'Jobs',\n  },\n  defaults: {\n    name: 'New Job',\n    steps: [],\n    executor: { name: 'Select Executor' },\n  },\n  parameters: componentParametersSubtypes.job,\n  /**\n   TODO: Implement this to pass transform method to\n   dependsOn: (definitions) => [definitions.commands, definitions.executors],\n   */\n  transform: ({ name, ...values }, definitions) => {\n    return parsers.parseJob(\n      name,\n      values,\n      definitions.commands,\n      definitions.executors,\n    );\n  },\n  store: {\n    get: (state) => {\n      return state.definitions.jobs;\n    },\n    add: (actions) => actions.defineJob,\n    update: (actions) => actions.updateJob,\n    remove: (actions) => actions.undefineJob,\n  },\n  dragTarget: 'workflow',\n  node: {\n    transform: (data, params) => {\n      return new workflow.WorkflowJob(data, params);\n    },\n    component: JobNode,\n  },\n  components: {\n    icon: JobIcon,\n    summary: JobSummary,\n    inspector: JobInspector,\n  },\n  docsInfo: {\n    description:\n      'Collection of steps to be executed within the Executor environment.',\n    link: 'https://circleci.com/docs/2.0/concepts/#jobs',\n  },\n};\n\nexport default JobMapping;\n","import { Job } from '@circleci/circleci-config-sdk';\nimport JobIcon from '../../../icons/components/JobIcon';\nimport WorkflowIcon from '../../../icons/components/WorkflowIcon';\nimport { useStoreState } from '../../../state/Hooks';\n\nconst JobSummary: React.FunctionComponent<{ data: Job }> = (props) => {\n  const stagedJobMap = useStoreState((state) => state.stagedJobs);\n  const workflows = useStoreState((state) => state.workflows);\n  const selectedWorkflow = useStoreState((state) => state.selectedWorkflow);\n  const workflowName = workflows[selectedWorkflow].name;\n  const stagedJobs = stagedJobMap.workflows[workflowName];\n\n  return (\n    <div className=\"flex flex-row\">\n      <JobIcon className=\"ml-1 mr-2 w-5 h-5\" />\n      <p className=\"leading-5\">{props.data.name}</p>\n      {stagedJobs && (\n        <WorkflowIcon\n          className=\"w-5 h-5 ml-auto\"\n          color={props.data.name in stagedJobs ? '#048C43' : '#E3E3E3'}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default JobSummary;\n","import {\n  executors,\n  Job,\n  parsers,\n  reusable,\n  workflow,\n} from '@circleci/circleci-config-sdk';\nimport ExecutorSummary from '../components/atoms/summaries/ExecutorSummary';\nimport ExecutorInspector from '../components/containers/inspector/ExecutorInspector';\nimport { executorSubtypes } from '../components/containers/inspector/subtypes/ExecutorSubtypes';\nimport { componentParametersSubtypes } from '../components/containers/inspector/subtypes/ParameterSubtypes';\nimport ExecutorTypePageNav from '../components/menus/definitions/subtypes/ExecutorTypePage';\nimport ExecutorIcon from '../icons/components/ExecutorIcon';\nimport ComponentMapping from './ComponentMapping';\nimport JobMapping from './JobMapping';\n\nexport type AnyExecutor =\n  | executors.DockerExecutor\n  | executors.MacOSExecutor\n  | executors.MachineExecutor\n  | executors.WindowsExecutor\n  | executors.Executor;\n\nconst ExecutorMapping: ComponentMapping<\n  reusable.ReusableExecutor,\n  workflow.WorkflowJob\n> = {\n  type: 'executors',\n  name: {\n    singular: 'Executor',\n    plural: 'Executors',\n  },\n  defaults: {\n    docker: {\n      name: 'new-docker-executor',\n      docker: [\n        {\n          image: 'cimg/base:stable',\n        },\n      ],\n      resource_class: 'medium',\n    },\n    machine: {\n      name: 'new-machine-executor',\n      machine: {\n        image: 'ubuntu-2004:202111-01',\n        parameters: {},\n      },\n      resource_class: 'medium',\n    },\n    macos: {\n      name: 'new-macos-executor',\n      macos: {\n        xcode: '13.2.0',\n        parameters: {},\n      },\n      resource_class: 'medium',\n    },\n    windows: {\n      name: 'new-windows-executor',\n      machine: {\n        image: 'windows-server-2019-vs2019:stable',\n        parameters: {},\n      },\n      resource_class: 'windows.medium',\n    },\n  },\n  parameters: componentParametersSubtypes.executor,\n  transform: ({ name, ...values }) => {\n    return parsers.parseReusableExecutor(name, values);\n  },\n  store: {\n    get: (state) => state.definitions.executors,\n    add: (actions) => actions.defineExecutor,\n    update: (actions) => actions.updateExecutor,\n    remove: (actions) => actions.undefineExecutor,\n  },\n  dragTarget: JobMapping.type,\n  applyToNode: (data, { job, parameters }) => {\n    let params = { ...parameters };\n\n    if (!(job instanceof Job)) {\n      let executors = job.parameters.parameters.filter(\n        (param) => param.type === 'executor',\n      );\n\n      if (executors.length === 0) {\n        // TODO: Prompt user to add executor parameter\n      } else if (executors.length === 1) {\n        params[executors[0].name] = data.name;\n      } else {\n        // TODO: Prompt user to select executor parameter\n      }\n    }\n\n    return new workflow.WorkflowJob(job, params);\n  },\n  subtypes: {\n    component: ExecutorTypePageNav,\n    getSubtype: (reusableExec) => {\n      const reusableExecsKeys = Object.keys(reusableExec);\n\n      return Object.keys(executorSubtypes).find((subtype) =>\n        reusableExecsKeys.includes(subtype),\n      );\n    },\n    definitions: executorSubtypes,\n  },\n  components: {\n    icon: ExecutorIcon,\n    summary: ExecutorSummary,\n    inspector: ExecutorInspector,\n  },\n  docsInfo: {\n    description:\n      'Technology/Environment which Jobs execute their steps inside of.',\n    link: 'https://circleci.com/docs/2.0/executor-types/',\n  },\n};\n\nexport default ExecutorMapping;\n","import { IconProps } from '../IconProps';\n\nconst ParameterIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 18 18\" className={props.className}>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4.649 3.084A1 1 0 015.163 4.4 13.95 13.95 0 004 10c0 1.993.416 3.886 1.164 5.6a1 1 0 01-1.832.8A15.95 15.95 0 012 10c0-2.274.475-4.44 1.332-6.4a1 1 0 011.317-.516zM12.96 7a3 3 0 00-2.342 1.126l-.328.41-.111-.279A2 2 0 008.323 7H8a1 1 0 000 2h.323l.532 1.33-1.035 1.295a1 1 0 01-.781.375H7a1 1 0 100 2h.039a3 3 0 002.342-1.126l.328-.41.111.279A2 2 0 0011.677 14H12a1 1 0 100-2h-.323l-.532-1.33 1.035-1.295A1 1 0 0112.961 9H13a1 1 0 100-2h-.039zm1.874-2.6a1 1 0 011.833-.8A15.95 15.95 0 0118 10c0 2.274-.475 4.44-1.332 6.4a1 1 0 11-1.832-.8A13.949 13.949 0 0016 10c0-1.993-.416-3.886-1.165-5.6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nexport default ParameterIcon;\n","import { parsers } from '@circleci/circleci-config-sdk';\nimport { CustomParameter } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters';\nimport { PipelineParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport ParameterSummary from '../components/atoms/summaries/ParameterSummary';\nimport ParameterInspector from '../components/containers/inspector/ParameterInspector';\nimport { parameterSubtypes } from '../components/containers/inspector/subtypes/ParameterSubtypes';\nimport ParameterTypePageNav from '../components/menus/definitions/subtypes/ParameterTypePage';\nimport ParameterIcon from '../icons/components/ParameterIcon';\nimport ComponentMapping from './ComponentMapping';\n\nconst ParameterMapping: ComponentMapping<\n  CustomParameter<PipelineParameterLiteral>\n> = {\n  type: 'parameters',\n  name: {\n    singular: 'Parameter',\n    plural: 'Parameters',\n  },\n  defaults: {\n    integer: {\n      name: 'new_integer_parameter',\n    },\n    boolean: {\n      name: 'new_boolean_parameter',\n    },\n    string: {\n      name: 'new_string_parameter',\n    },\n    enum: {\n      name: 'new_enum_parameter',\n    },\n  },\n  transform: ({ name, ...values }) => {\n    return parsers.parseParameter(\n      values,\n      name,\n    ) as CustomParameter<PipelineParameterLiteral>;\n  },\n  store: {\n    get: (state) => state.definitions.parameters,\n    add: (actions) => actions.defineParameter,\n    update: (actions) => actions.updateParameter,\n    remove: (actions) => actions.undefineParameter,\n  },\n  subtypes: {\n    component: ParameterTypePageNav,\n    getSubtype: (parameter) => parameter.type,\n    definitions: parameterSubtypes,\n  },\n  components: {\n    icon: ParameterIcon,\n    summary: ParameterSummary,\n    inspector: ParameterInspector,\n  },\n  docsInfo: {\n    description:\n      'Options to help describe and expand functionality of a job, command, or executor.',\n    link: 'https://circleci.com/docs/2.0/reusing-config/#using-the-parameters-declaration',\n  },\n};\n\nexport default ParameterMapping;\n","import ParameterIcon from '../../../../icons/components/ParameterIcon';\nimport ComponentMapping from '../../../../mappings/ComponentMapping';\nimport { NavigationComponent } from '../../../../state/Store';\nimport BreadCrumbs from '../../../containers/BreadCrumbs';\nimport {\n  componentParametersSubtypes,\n  parameterSubtypes,\n} from '../../../containers/inspector/subtypes/ParameterSubtypes';\nimport { SubTypeSelectPageProps } from '../../SubTypeMenu';\n\nconst ParameterTypePage = (\n  props: SubTypeSelectPageProps<string> & { component: ComponentMapping },\n) => {\n  const parameters =\n    props.component?.parameters || componentParametersSubtypes.pipeline;\n\n  return (\n    <div>\n      <header>\n        {/* <WorkflowIcon className=\"w-6 h-6 mr-1\" color=\"#6A6A6A\" /> */}\n        <BreadCrumbs />\n        <div className=\"ml-6 flex py-3\">\n          <ParameterIcon className=\"w-8 h-8 p-1 pl-0 mr-1\"></ParameterIcon>\n          <h1 className=\"text-2xl font-bold\">New Parameter</h1>\n        </div>\n        <div className=\"flex border-b border-circle-gray-300 pl-6\">\n          <div\n            className={`text-sm tracking-wide px-3 py-3 font-bold text-center 'border-black border-b-4 border-black text-circle-black`}\n          >\n            TYPE\n          </div>\n        </div>\n      </header>\n      <div className=\"p-6\">\n        {parameters?.types &&\n          parameters.types.map((subtype: any) => (\n            <button\n              key={subtype}\n              type=\"button\"\n              className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n              onClick={() => {\n                props.setSubtype(subtype);\n              }}\n            >\n              <p className=\"font-bold\">{parameterSubtypes[subtype]?.text}</p>\n              <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                {parameterSubtypes[subtype]?.description}\n              </p>\n            </button>\n            // <InspectorProperty name={command} label={commandProps[command].text} as=\"card\" />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nconst ParameterTypePageNav: NavigationComponent = {\n  Component: ParameterTypePage,\n  Label: (props: SubTypeSelectPageProps<string>) => <p>New Parameter</p>,\n  Icon: (props: SubTypeSelectPageProps<string>) => (\n    <ParameterIcon className=\"w-6 h-8 py-2\" />\n  ),\n};\n\nexport default ParameterTypePageNav;\n","import { CustomParameter } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters';\nimport { PipelineParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport ParameterIcon from '../../../icons/components/ParameterIcon';\n\nconst ParameterSummary: React.FunctionComponent<{\n  data: CustomParameter<PipelineParameterLiteral>;\n}> = (props) => {\n  return (\n    <div className=\"flex flex-row\">\n      <ParameterIcon className=\"ml-1 mr-2 w-5 h-5\" /> {props.data.name}\n    </div>\n  );\n};\n\nexport default ParameterSummary;\n","import { FormikValues } from 'formik';\nimport { DefinitionModel } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport { parameterSubtypes } from './subtypes/ParameterSubtypes';\n// data: CustomParameter<PrimitiveParameterLiteral>\nconst ParameterInspector = (\n  props: FormikValues & {\n    definitions: DefinitionModel;\n    subtype?: string;\n  },\n) => {\n  return (\n    <div>\n      <InspectorProperty\n        name=\"type\"\n        label=\"Type\"\n        hidden\n        value={props.subtype}\n      />\n      <InspectorProperty name=\"name\" label=\"Name\" required />\n      <InspectorProperty name=\"description\" label=\"Description\" />\n      {props.subtype && parameterSubtypes[props.subtype]?.fields}\n    </div>\n  );\n};\n\nexport default ParameterInspector;\n","import {\n  executors,\n  Job,\n  parameters,\n  reusable,\n} from '@circleci/circleci-config-sdk';\nimport { Generable } from '@circleci/circleci-config-sdk/dist/src/lib/Components';\nimport { ActionCreator, Actions, State } from 'easy-peasy';\nimport { FormikValues } from 'formik';\nimport { ReactElement } from 'react';\nimport { NodeProps } from 'react-flow-renderer';\nimport Store, {\n  DefinitionModel,\n  NavigationComponent,\n  UpdateType,\n} from '../state/Store';\nimport CommandMapping from './CommandMapping';\nimport ExecutorMapping from './ExecutorMapping';\nimport JobMapping from './JobMapping';\nimport ParameterMapping from './ParameterMapping';\n\n/**\n * Interface to add a circleci-config-sdk component to a data mapping.\n */\nexport interface DataMapping {\n  type: string;\n  component: any[];\n  mapping: GenerableMapping;\n}\n\n/**\n * Registry of circleci-config-sdk component to data maps.\n */\n\n// Maybe add docs link to Executor and description as a key to each Mapping\nconst dataMappings: DataMapping[] = [\n  {\n    type: 'executors',\n    component: [\n      executors.DockerExecutor,\n      executors.MacOSExecutor,\n      executors.MachineExecutor,\n      executors.WindowsExecutor,\n    ],\n    mapping: ExecutorMapping,\n  },\n  {\n    type: 'jobs',\n    component: [Job],\n    mapping: JobMapping,\n  },\n  {\n    type: 'commands',\n    component: [reusable.CustomCommand],\n    mapping: CommandMapping,\n  },\n  {\n    type: 'parameters',\n    component: [parameters.CustomParameter],\n    mapping: ParameterMapping,\n  },\n];\n\n/**\n * Utility function for converting a component into a mapping type.\n * @param {any} data:any\n * @returns {any}\n */\nconst componentToType = (data: any): GenerableMapping | undefined => {\n  let foundType = undefined;\n\n  dataMappings.forEach((mapping) => {\n    if (typeof data === 'string' && mapping.type === data) {\n      foundType = mapping.mapping;\n      return;\n    } else {\n      mapping.component.forEach((type) => {\n        if (data instanceof type) {\n          foundType = mapping.mapping;\n          return;\n        }\n      });\n    }\n  });\n\n  return foundType;\n};\n\nconst typeToComponent = (componentType: string) => {\n  return dataMappings.find((mapping) => mapping.type === componentType);\n};\n\nexport { componentToType, typeToComponent, dataMappings };\n\ntype StoreType = typeof Store;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\n\nexport interface SubTypeMapping {\n  text: string;\n  description?: string;\n  docsLink?: string;\n  component?: any;\n  fields: ReactElement | React.FunctionComponent<any>;\n}\n\nexport interface GenerableInfoType {\n  description: string;\n  link: string;\n}\n\n/**\n * circleci-config-sdk Generable to Data Mapping\n *\n * @interface\n */\nexport default interface GenerableMapping<\n  ConfigDataType = any,\n  ConfigNodeProps = any,\n  InspectorDefaults = any,\n> {\n  guide?: { info: string; step: number };\n  /**  String name type of component. Must be equal to index within registry. */\n  type: keyof DefinitionModel;\n  /**  Language values of component. This should be used for UI display only. */\n  name: {\n    singular: string;\n    plural: string;\n  };\n  /** Default values to populate inspectors\n   *  @todo need to add support for subtype defaults\n   */\n  defaults: {\n    [K in KeysOfUnion<ConfigDataType | InspectorDefaults>]?: any;\n  };\n  /**\n   * Is true when the component can accept parameters.\n   */\n  parameters?: any;\n  docsInfo: GenerableInfoType;\n  /** Transform field values into an instance of ConfigDataType */\n  transform: (\n    values: { [K: string]: any },\n    definitions: DefinitionModel,\n  ) => ConfigDataType | undefined;\n  store: {\n    /** Returns easy-peasy state hook for component array */\n    get: (state: State<StoreType>) => ConfigDataType[] | undefined;\n    /** Returns easy-peasy add action hook for component array */\n    add: (state: Actions<StoreType>) => ActionCreator<ConfigDataType>;\n    /** Returns easy-peasy update action hook for data type */\n    update: (\n      state: Actions<StoreType>,\n    ) => (data: UpdateType<ConfigDataType>) => void;\n    /** Returns easy-peasy removal action hook for data type */\n    remove: (state: Actions<StoreType>) => (data: ConfigDataType) => void;\n  };\n  /**\n   * Name of target that a definition can be tragged to.\n   * Currently only 'workflow' or 'job'\n   */\n  dragTarget?: string;\n  /**\n   * Called from a node to apply datatype to the applied node\n   * @todo Potentially support multiple node types.\n   * @returns Object populated with values of ConfigNodeProps */\n  applyToNode?: (\n    data: ConfigDataType,\n    nodeData: ConfigNodeProps,\n  ) => { [K in KeysOfUnion<ConfigNodeProps>]?: any };\n  node?: {\n    /** Transform definition data */\n    transform?: (data: ConfigDataType, extras?: any) => ConfigNodeProps;\n    /** @todo: Add store functionality to better support updating defintions and their corresponding workflow nodes */\n    component: React.FunctionComponent<{ data: ConfigNodeProps } & NodeProps>;\n  };\n  subtypes?: {\n    component: NavigationComponent;\n    getSubtype: (data: ConfigDataType) => string | undefined;\n    definitions: { [subtype: string]: SubTypeMapping };\n  };\n  components: {\n    /** Icon Generable to render in definition */\n    icon?: React.FunctionComponent<any>;\n    /** Generable to render in definition */\n    summary: React.FunctionComponent<{ data: ConfigDataType }>;\n    /**\n     * Called by InspectorPane and CreateNew to generate form\n     * @returns Function which returns a Formik Form object*/\n    inspector: (\n      props: FormikValues & {\n        definitions: DefinitionModel;\n        data?: Generable;\n        subtype?: string;\n      },\n      // data: ConfigDataType;\n    ) => JSX.Element;\n  };\n}\n","import {\n  ConnectionLineComponentProps,\n  useStoreState as flowState,\n} from 'react-flow-renderer';\nimport { useStoreState } from '../../state/Hooks';\n\nconst getPos = (isSource: boolean, bounds: DOMRect, transform: number[]) => {\n  let x, y;\n\n  if (isSource) {\n    x = (bounds.x + bounds.width - transform[0]) / transform[2];\n  } else {\n    x = (bounds.x - transform[0]) / transform[2];\n  }\n\n  y = (bounds.y + bounds.height / 2 - 60 - transform[1]) / transform[2];\n\n  return { x, y };\n};\n\nconst ConnectionLine = ({ targetX, targetY }: ConnectionLineComponentProps) => {\n  const connecting = useStoreState((state) => state.connecting);\n  const altAction = useStoreState((state) => state.altAction);\n  const transform = flowState((state: any) => state.transform);\n  const handle = connecting?.start?.ref?.current as Element;\n  const isSource = connecting?.start?.id.connectionHandleType === 'source';\n\n  if (!handle) {\n    return null;\n  }\n\n  const bounds = handle.getBoundingClientRect();\n  const start = getPos(isSource, bounds, transform);\n  let end = { x: targetX, y: targetY };\n  const dist = 30 * (isSource ? 1 : -1);\n  const invalid = isSource ? end.x < start.x : end.y > start.x;\n  let color = '#76CDFF';\n\n  if (!invalid && connecting?.end?.ref) {\n    const snapTo = connecting?.end.ref?.current as Element;\n\n    if (snapTo && connecting?.end?.ref.current !== handle) {\n      const snapToBounds = snapTo.getBoundingClientRect();\n      end = getPos(!isSource, snapToBounds, transform);\n      color = '#0078CA';\n    }\n  }\n\n  color = invalid || altAction ? '#F24646' : color;\n\n  return (\n    <g>\n      <path\n        fill=\"none\"\n        stroke={color}\n        strokeWidth={1.5}\n        className=\"animated\"\n        d={`M${start.x},${start.y} ${start.x + dist},${start.y} ${\n          start.x + dist\n        },${start.y} ${end.x - dist},${end.y} ${end.x - dist},${end.y} ${\n          end.x\n        },${end.y}`}\n      />\n      <circle\n        cx={end.x}\n        cy={end.y}\n        fill=\"#fff\"\n        r={3}\n        stroke={color}\n        strokeWidth={1.5}\n      />\n      <circle\n        cx={start.x - 2}\n        cy={start.y}\n        fill=\"#fff\"\n        r={3}\n        stroke={color}\n        strokeWidth={1.5}\n      />\n    </g>\n  );\n};\n\nexport default ConnectionLine;\n","import React from 'react';\nimport { EdgeProps } from 'react-flow-renderer';\n\nexport default function Edge({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}: EdgeProps) {\n  const gap = 45;\n\n  return (\n    <g>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={`M${sourceX - gap * 2},${sourceY} ${sourceX - gap},${sourceY} ${\n          sourceX - gap\n        },${sourceY} ${targetX + gap},${targetY} ${targetX + gap},${targetY} ${\n          targetX + gap * 2\n        },${targetY}`}\n      />\n      {/* <text>\n        <textPath\n          href={`#${id}`}\n          style={{ fontSize: '12px' }}\n          startOffset=\"50%\"\n          textAnchor=\"middle\"\n        >\n          {'requires'}\n        </textPath>\n      </text> */}\n    </g>\n  );\n}\n","import React from 'react';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport { Select } from '../atoms/Select';\nimport CollapsibleList from './CollapsibleList';\n\nexport default function PreviewToolbox() {\n  const toolbox = useStoreState((state) => state.previewToolbox);\n  const updateToolbox = useStoreActions(\n    (actions) => actions.updatePreviewToolBox,\n  );\n\n  const updateFilter = (key: 'type' | 'pattern', value: any) => {\n    updateToolbox({ ...toolbox, filter: { ...toolbox.filter, [key]: value } });\n  };\n\n  return (\n    <div className=\"absolute z-10 bg-white rounded m-2 p-4 shadow border border-circle-gray-300\">\n      <CollapsibleList title=\"Preview Toolbox\">\n        <div className=\"px-1 py-3\">\n          <div className=\"border-l border-circle-gray-300 px-3 py-1\">\n            <CollapsibleList\n              title=\"Staged Job Filters\"\n              onChange={(expanded) => {\n                updateToolbox({\n                  ...toolbox,\n                  filter: { ...toolbox.filter, preview: expanded },\n                });\n              }}\n            >\n              <div className=\"flex flex-row\">\n                <Select\n                  value={toolbox.filter.type}\n                  onChange={(value: 'branches' | 'tags') =>\n                    updateFilter('type', value)\n                  }\n                  className=\"mt-2\"\n                >\n                  <option value=\"branches\">Branch</option>\n                  <option value=\"tags\">Tag</option>\n                </Select>\n                <input\n                  className=\"bg-white rounded p-2 ml-2 mt-2 shadow-sm border border-circle-gray-300\"\n                  placeholder=\"^.*$\"\n                  value={toolbox.filter.pattern}\n                  onChange={(e) => {\n                    updateFilter('pattern', e.target.value);\n                  }}\n                />\n              </div>\n            </CollapsibleList>\n          </div>\n        </div>\n      </CollapsibleList>\n    </div>\n  );\n}\n","import { orb } from '@circleci/circleci-config-sdk';\nimport { WorkflowJobParameters } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow/types/WorkflowJob.types';\nimport { useEffect, useState } from 'react';\nimport ReactFlow, {\n  addEdge,\n  Background,\n  BackgroundVariant,\n  ConnectionLineComponentProps,\n  ConnectionMode,\n  EdgeProps,\n  FlowTransform,\n  isNode,\n  Node,\n  NodeTypesType,\n  useStoreActions as flowActions,\n} from 'react-flow-renderer';\nimport { v4 } from 'uuid';\nimport { dataMappings } from '../../mappings/ComponentMapping';\nimport JobMapping from '../../mappings/JobMapping';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport { WorkflowModel } from '../../state/Store';\nimport ConnectionLine from '../atoms/ConnectionLine';\nimport Edge from '../atoms/Edge';\nimport PreviewToolbox from './PreviewToolbox';\n\nexport interface ElementProps {\n  className?: string;\n  bgClassName?: string;\n  workflow: WorkflowModel;\n}\n\nconst getTypes = (): NodeTypesType =>\n  Object.assign(\n    {},\n    ...dataMappings.map((component) =>\n      component.mapping.node\n        ? { [component.mapping.type]: component.mapping.node.component }\n        : null,\n    ),\n  );\n\nconst WorkflowPane = (props: ElementProps) => {\n  const importOrb = useStoreActions((actions) => actions.importOrb);\n  const [transform, setTransform] = useState<FlowTransform>({\n    x: 0,\n    y: 0,\n    zoom: 1,\n  });\n  const [cooldown, setCooldown] = useState(false);\n\n  const elements = useStoreState(\n    (state) => state.workflows[state.selectedWorkflow].elements,\n  );\n\n  const addWorkflowElement = useStoreActions(\n    (actions) => actions.addWorkflowElement,\n  );\n  const dragging = useStoreState((state) => state.dragging);\n  const connecting = useStoreState((state) => state.connecting);\n  const setWorkflowElements = useStoreActions(\n    (actions) => actions.setWorkflowElements,\n  );\n  const setConnecting = useStoreActions((actions) => actions.setConnecting);\n  const altAction = useStoreState((state) => state.altAction);\n  const setAltAction = useStoreActions((actions) => actions.setAltAction);\n  const [connectingTo, setConnectingTo] = useState({ x: 0, y: 0 });\n\n  window.addEventListener('keydown', (e) => {\n    if (e.shiftKey && !cooldown) {\n      setAltAction(!altAction);\n\n      setCooldown(true);\n\n      setTimeout(() => {\n        setCooldown(false);\n      }, 5);\n    }\n  });\n\n  const updateWorkflowJob = (\n    targetJob: string,\n    applyToData: (parameters: WorkflowJobParameters) => WorkflowJobParameters,\n  ) =>\n    elements.map((element) => {\n      return isNode(element) &&\n        JobMapping.node?.transform &&\n        (element.data.parameters?.name || element.data.job.name) === targetJob\n        ? {\n            ...element,\n            data: JobMapping.node.transform(\n              element.data.job,\n              applyToData(element.data.parameters),\n            ),\n          }\n        : element;\n    });\n\n  const handleMouseUp = () => {\n    if (connecting?.start?.name) {\n      const source =\n        connecting.start.id.connectionHandleType === 'source'\n          ? connecting.start\n          : connecting.end;\n      const target =\n        connecting.start.id.connectionHandleType === 'source'\n          ? connecting.end\n          : connecting.start;\n      const startName = source?.name;\n\n      if (target?.name && startName) {\n        if (\n          connecting.intent === 'creating' &&\n          source.id.connectionNodeId !== target.id.connectionNodeId\n        ) {\n          setWorkflowElements(\n            addEdge(\n              {\n                source: source.id.connectionNodeId,\n                target: target.id.connectionNodeId,\n                type: 'requires',\n                sourceHandle: source.id.connectionHandleId,\n                targetHandle: target.id.connectionNodeId,\n                animated: false,\n                style: { stroke: '#A3A3A3', strokeWidth: '2px' },\n              },\n              updateWorkflowJob(target.name, (parameters) => ({\n                ...parameters,\n                requires: parameters?.requires\n                  ? [...parameters.requires, startName]\n                  : [startName],\n              })),\n            ),\n          );\n        } else {\n          const updated = updateWorkflowJob(target.name, (parameters) => {\n            let requires = undefined;\n\n            if (parameters.requires) {\n              const updatedRequires = parameters?.requires?.filter(\n                (requirement) => requirement !== startName,\n              );\n              requires =\n                updatedRequires.length > 0 ? updatedRequires : undefined;\n            }\n            return {\n              ...parameters,\n              requires,\n            };\n          });\n\n          const filtered = updated.filter((e) => {\n            if (e.type !== 'requires') {\n              return true;\n            }\n\n            const edge = e as EdgeProps;\n\n            return (\n              edge.source !== source.id.connectionNodeId ||\n              edge.target !== target.id.connectionNodeId\n            );\n          });\n\n          setWorkflowElements(filtered);\n        }\n      }\n\n      setConnecting({\n        id: {\n          connectionNodeId: null,\n          connectionHandleType: null,\n          connectionHandleId: null,\n        },\n      });\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('mouseup', handleMouseUp);\n\n    return () => {\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  });\n\n  const gap = 15;\n\n  const NodeGraph = () => {\n    const setConnecting = flowActions((state) => state.setConnectionNodeId);\n    const setConnectingPosition = flowActions(\n      (state) => state.setConnectionPosition,\n    );\n\n    useEffect(() => {\n      setConnecting(connecting?.start?.id);\n      setConnectingPosition({\n        x: connectingTo.x - transform.x,\n        y: connectingTo.y - transform.y,\n      });\n    });\n\n    return null;\n  };\n\n  return (\n    <div\n      className=\"w-full h-full\"\n      onDragOver={(e) => {\n        if (dragging?.dataType?.dragTarget === 'workflow') {\n          e.preventDefault();\n        }\n      }}\n      onDrag={(e) => {}}\n      onMouseMove={(e) => {\n        const containerBounds = (e.target as Element)\n          .closest('.react-flow')\n          ?.getBoundingClientRect();\n\n        if (containerBounds) {\n          setConnectingTo({\n            x: e.clientX + transform.x - containerBounds.left,\n            y: e.clientY + transform.y - containerBounds.top,\n          });\n        }\n      }}\n      onDrop={(e) => {\n        const nodeMapping = dragging?.dataType?.node;\n\n        if (dragging?.dataType?.dragTarget === 'workflow' && nodeMapping) {\n          const pos = {\n            x: e.clientX - gap - transform.x,\n            y: e.clientY - gap * 3 - transform.y,\n          };\n          const round = (val: number) =>\n            Math.floor(val / transform.zoom / gap) * gap;\n          let data = dragging.data;\n\n          if (nodeMapping.transform) {\n            data = nodeMapping.transform(data);\n          }\n\n          if (data.job instanceof orb.OrbRef) {\n            importOrb(data.job.orb);\n          }\n\n          const workflowNode: Node<any> = {\n            id: v4(),\n            data,\n            connectable: true,\n            dragHandle: '.node',\n            type: dragging.dataType.type,\n            position: { x: round(pos.x), y: round(pos.y) },\n          };\n\n          addWorkflowElement(workflowNode);\n        }\n      }}\n    >\n      <PreviewToolbox />\n      <ReactFlow\n        elements={elements}\n        className={props.className}\n        onMove={(e) => {\n          setTransform(e || transform);\n        }}\n        selectNodesOnDrag={false}\n        nodeTypes={getTypes()}\n        edgeTypes={{ requires: Edge }}\n        snapToGrid={true}\n        connectionMode={ConnectionMode.Loose}\n        connectionLineComponent={\n          ConnectionLine as React.ComponentType<ConnectionLineComponentProps>\n        }\n      >\n        <NodeGraph />\n        <Background\n          variant={BackgroundVariant.Dots}\n          gap={gap}\n          color=\"#A3A3A3\"\n          className={props.bgClassName}\n          size={1}\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default WorkflowPane;\n","import WorkflowIcon from '../../icons/components/WorkflowIcon';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport AddButton from '../atoms/AddButton';\nimport { Select } from '../atoms/Select';\nimport WorkflowPane from '../containers/WorkflowContainer';\n\nconst WorkflowsPane = () => {\n  const workflows = useStoreState((state) => state.workflows);\n  const selectedWorkflow = useStoreState((state) => state.selectedWorkflow);\n  const selectWorkflow = useStoreActions((actions) => actions.selectWorkflow);\n  const addWorkflow = useStoreActions((actions) => actions.addWorkflow);\n\n  return (\n    <div className=\"flex flex-col flex-nowrap flex-1\">\n      <div className=\"flex w-full bg-white h-16\">\n        <div className=\"flex-col my-auto pl-4 pr-2 pt-1\">\n          <Select\n            placeholder=\"No workflows\"\n            className=\"w-60\"\n            value={selectedWorkflow}\n            dropdownClassName=\"w-60 rounded\"\n            onChange={(e) => selectWorkflow(e)}\n            icon={<WorkflowIcon className=\"ml-2 w-6\" />}\n          >\n            {workflows.map((workflow, num) => (\n              <option value={num} key={workflow.id}>\n                {workflow.name}\n              </option>\n            ))}\n          </Select>\n        </div>\n        <AddButton\n          className=\"flex my-auto\"\n          onClick={() => {\n            addWorkflow('new-workflow');\n          }}\n        ></AddButton>\n      </div>\n\n      <WorkflowPane\n        workflow={workflows[selectedWorkflow]}\n        bgClassName=\"bg-circle-gray-200\"\n        className=\"border border-r-0 h-full border-b-0 border-circle-gray-300\"\n      />\n    </div>\n  );\n};\n\nexport default WorkflowsPane;\n","import ComponentMapping from '../../mappings/ComponentMapping';\n\nconst ComponentInfo = (props: { type: ComponentMapping }) => {\n  return (\n    <div className=\"pb-4\">\n      <p className=\"font-medium text-sm text-circle-gray-500\">\n        {props.type.docsInfo.description}\n      </p>\n      <a\n        className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n        href={props.type.docsInfo.link}\n        target=\"circleci_docs\"\n      >\n        Learn More\n      </a>\n    </div>\n  );\n};\n\nexport default ComponentInfo;\n","import { useEffect } from 'react';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\n\nconst Toast = () => {\n  const toast = useStoreState((state) => state.toast);\n  const clearToast = useStoreActions((actions) => actions.clearToast);\n\n  useEffect(() => {\n    setTimeout(() => {\n      clearToast();\n    }, 3500);\n  }, [toast, clearToast]);\n\n  return (\n    <>\n      {toast && (\n        <div className=\"p-6\">\n          <div\n            className={\n              'flex flex-row text-white bg-circle-gray-700 p-3 w-full transition-opacity rounded'\n            }\n          >\n            <p className=\"font-bold mx-2 overflow-ellipsis overflow-x-hidden whitespace-nowrap my-auto\">\n              {toast?.label}\n            </p>\n            <p className=\"my-auto\">{toast?.content}</p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Toast;\n","import { FieldArray, useField } from 'formik';\nimport ComponentMapping from '../../mappings/ComponentMapping';\nimport ParameterMapping from '../../mappings/ParameterMapping';\nimport { useStoreActions } from '../../state/Hooks';\nimport { InspectorDefinitionMenu } from '../menus/definitions/InspectorDefinitionMenu';\nimport { navSubTypeMenu } from '../menus/SubTypeMenu';\nconst ParameterContainer = (props: {\n  dataMapping: ComponentMapping;\n  values: any;\n}) => {\n  const [field] = useField(props.values.parameters);\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n\n  return (\n    <FieldArray\n      {...field}\n      name=\"parameters\"\n      render={(arrayHelpers) => (\n        <div className=\"p-6 flex flex-col\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              if (!ParameterMapping.subtypes) {\n                return;\n              }\n\n              navigateTo(\n                navSubTypeMenu(\n                  {\n                    typePage: ParameterMapping.subtypes.component,\n                    typeProps: { component: props.dataMapping },\n                    menuPage: InspectorDefinitionMenu,\n                    menuProps: {\n                      dataType: ParameterMapping,\n                      passBackKey: 'parameters',\n                      index: -1,\n                      source: props.values.parameters\n                        ? Object.keys(props.values.parameters)\n                        : undefined,\n                    },\n                  },\n                  props.values,\n                ),\n              );\n            }}\n            className=\"m-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium mb-4\"\n          >\n            Add Parameter\n          </button>\n          {props.values.parameters &&\n            Object.entries(props.values.parameters).map(\n              ([name, parameter]: [string, any]) => (\n                <div\n                  key={name}\n                  className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n                >\n                  <div className=\"flex\">\n                    <p className=\"font-bold\">{name}</p>\n                  </div>\n                  {parameter.description && (\n                    <p className=\"text-sm mt-1 leading-4 whitespace-pre-wrap text-circle-gray-500\">\n                      {parameter.description}\n                    </p>\n                  )}\n                  {parameter.defaultValue ? (\n                    <p className=\"text-sm mt-1 leading-4 whitespace-pre-wrap text-circle-gray-500\">\n                      {parameter.defaultValue}\n                    </p>\n                  ) : (\n                    <p className=\"text-sm mt-1 leading-4 whitespace-pre-wrap text-circle-gray-500\">\n                      Required\n                    </p>\n                  )}\n                </div>\n              ),\n            )}\n        </div>\n      )}\n    />\n  );\n};\n\nexport default ParameterContainer;\n","import { Form, Formik } from 'formik';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { DataModel, NavigationComponent } from '../../../state/Store';\nimport Toast from '../../atoms/Toast';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport ParameterContainer from '../../containers/ParametersContainer';\nimport { SubTypeMenuPageProps } from '../SubTypeMenu';\nimport TabbedMenu from '../TabbedMenu';\n\ntype InspectorDefinitionProps = DataModel & {\n  values: Record<string, object>;\n  editing?: boolean;\n  passBackKey?: string;\n  activeTab?: number;\n  index: number;\n  source?: Array<any>;\n  toast: boolean;\n  data?: any;\n} & SubTypeMenuPageProps<any>;\n\nconst InspectorDefinitionMenu = (props: InspectorDefinitionProps) => {\n  const definitions = useStoreState((state) => state.definitions);\n  const generateConfig = useStoreActions((actions) => actions.generateConfig);\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n  const setGuideStep = useStoreActions((actions) => actions.setGuideStep);\n  const guideStep = useStoreState((state) => state.guideStep);\n  const dataMapping = props.dataType;\n  const submitToStore = useStoreActions(\n    (actions) =>\n      (props.editing\n        ? dataMapping?.store.update(actions)\n        : dataMapping?.store.add(actions)) || actions.error,\n  );\n\n  const getIcon = (className: string) => {\n    let iconComponent = dataMapping?.components.icon;\n\n    if (iconComponent) {\n      let Icon = iconComponent;\n\n      return <Icon className={className} />;\n    }\n  };\n\n  const getValues = () => {\n    if (props.values) {\n      return props.values;\n    }\n\n    return props.subtype\n      ? dataMapping?.defaults[props.subtype]\n      : dataMapping?.defaults;\n  };\n\n  const tabs = ['PROPERTIES'];\n  const unpacked = getValues();\n  const subtype = props.subtype || dataMapping?.subtypes?.getSubtype(unpacked);\n\n  if (dataMapping?.parameters) {\n    tabs.push('PARAMETERS');\n  }\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <header>\n        <BreadCrumbs />\n        <div className=\"ml-6 py-3 flex\">\n          {getIcon('w-8 h-8 p-1 pl-0 mr-1')}\n          <h1 className=\"text-2xl font-bold\">\n            {props.editing ? 'Edit' : 'New'} {dataMapping?.name.singular}\n          </h1>\n        </div>\n      </header>\n      {dataMapping && (\n        <Formik\n          initialValues={{\n            ...unpacked,\n          }}\n          validateOnBlur\n          validate={(values) => {\n            // TODO: define error type\n            const errors: any = {};\n            const source = props.source || definitions[dataMapping.type];\n            const dupIndex = source.findIndex(\n              (d) =>\n                (typeof d === 'string' ? d : d.name) === values.name.trim(),\n            );\n\n            if (dupIndex !== -1 && dupIndex !== props.index) {\n              errors.name = 'Name is already in use';\n            }\n\n            return errors;\n          }}\n          enableReinitialize\n          onSubmit={(values) => {\n            if (!props.passBackKey) {\n              const newDefinition = dataMapping.transform(values, definitions);\n              const submitData = props.editing\n                ? { old: unpacked, new: newDefinition }\n                : newDefinition;\n\n              submitToStore(submitData);\n            }\n\n            if (\n              !props.editing &&\n              guideStep &&\n              dataMapping.guide?.step === guideStep\n            ) {\n              setGuideStep(guideStep + 1);\n            }\n\n            navigateBack({\n              toast: {\n                label: values.name.trim(),\n                content: 'saved',\n                status: 'success',\n              },\n              distance: 1,\n              apply: (parentValues) => {\n                if (props.passBackKey) {\n                  const { name, ...args } = values;\n\n                  return {\n                    ...parentValues,\n                    [props.passBackKey]: {\n                      ...parentValues[props.passBackKey],\n                      [name]: args,\n                    },\n                  };\n                }\n              },\n            });\n            generateConfig();\n          }}\n        >\n          {(formikProps) => (\n            <Form className=\"flex flex-col flex-1\">\n              <TabbedMenu tabs={tabs} activeTab={props.activeTab || 0}>\n                <div className=\"p-6\">\n                  {dataMapping.subtypes &&\n                    (props.editing ? (\n                      <div className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\">\n                        <p className=\"font-bold\">\n                          {dataMapping.subtypes.definitions[subtype]?.text}\n                        </p>\n                        <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                          {\n                            dataMapping.subtypes.definitions[subtype]\n                              ?.description\n                          }\n                        </p>\n                      </div>\n                    ) : (\n                      <button\n                        className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n                        type=\"button\"\n                        onClick={() => {\n                          props.selectSubtype();\n                        }}\n                      >\n                        <p className=\"font-bold\">\n                          {dataMapping.subtypes.definitions[subtype]?.text}\n                        </p>\n                        <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                          {\n                            dataMapping.subtypes.definitions[subtype]\n                              ?.description\n                          }\n                        </p>\n                      </button>\n                    ))}\n                  {dataMapping.components.inspector({\n                    ...formikProps,\n                    definitions,\n                    subtype,\n                    data: props.data,\n                  })}\n                </div>\n                {dataMapping.parameters ? (\n                  <ParameterContainer\n                    dataMapping={dataMapping}\n                    values={formikProps.values}\n                  />\n                ) : null}\n              </TabbedMenu>\n\n              <Toast />\n\n              <span className=\"border-b border-circle-gray-300 mt-auto\" />\n              <button\n                type=\"submit\"\n                // onClick={() => {\n                //   setShow(true);\n                //   setTimeout(() => setShow(false), 1000);\n                // }}\n                className=\"text-white text-sm font-medium p-2 m-6 bg-circle-blue duration:50 transition-all rounded-md2\"\n              >\n                {props.editing ? 'Save' : 'Create'} {dataMapping?.name.singular}\n              </button>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </div>\n  );\n};\n\nconst InspectorDefinitionMenuNav: NavigationComponent = {\n  Component: InspectorDefinitionMenu,\n  Label: (props: InspectorDefinitionProps) => {\n    return (\n      <p>\n        {props.editing ? 'Edit' : 'New'} {props.dataType?.name.singular}\n      </p>\n    );\n  },\n  Icon: (props: InspectorDefinitionProps) => {\n    let iconComponent = props.dataType?.components.icon;\n\n    if (!iconComponent) {\n      return null;\n    }\n\n    let DefinitionIcon = iconComponent;\n\n    return <DefinitionIcon className=\"w-6 h-8 py-2\" />;\n  },\n};\n\nexport { InspectorDefinitionMenuNav, InspectorDefinitionMenu };\n","import { Generable } from '@circleci/circleci-config-sdk/dist/src/lib/Components';\nimport { AnyParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport {\n  OrbImport,\n  OrbRef,\n} from '@circleci/circleci-config-sdk/dist/src/lib/Orb';\nimport * as CircleCI from '@circleci/circleci-config-sdk';\nimport GenerableMapping from '../../mappings/ComponentMapping';\nimport { useStoreActions } from '../../state/Hooks';\nimport { InspectorDefinitionMenuNav } from '../menus/definitions/InspectorDefinitionMenu';\n\nconst Definition = (props: {\n  data: Generable | OrbRef<AnyParameterLiteral>;\n  type: GenerableMapping;\n  index: number;\n  orb?: OrbImport;\n}) => {\n  const Summary = props.type.components.summary;\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const setDragging = useStoreActions((actions) => actions.setDragging);\n\n  return (\n    <button\n      className=\"w-full mb-2 p-2 text-sm cursor-pointer text-left text-circle-black \n      bg-white border border-circle-gray-300 rounded-md2 hover:border-gray-700\"\n      draggable=\"true\"\n      onDragStart={(e) => {\n        const type = props.type;\n\n        if (type?.dragTarget) {\n          setDragging({ dataType: type, data: props.data });\n        }\n      }}\n      onClick={(e) => {\n        if (props.data instanceof CircleCI.orb.OrbRef) {\n          return;\n        }\n\n        // this generated object should always have a single key\n        const generated = props.data.generate() as { [key: string]: object };\n        const flattened = Object.entries(generated).map(([key, value]) => ({\n          name: key,\n          ...value,\n        }))[0];\n\n        navigateTo({\n          component: InspectorDefinitionMenuNav,\n          props: {\n            data: props.data,\n            editing: true,\n            values: flattened,\n            dataType: props.type,\n            index: props.index,\n          },\n        });\n      }}\n    >\n      <Summary data={props.data} />\n    </button>\n  );\n};\n\nexport default Definition;\n","import { IconProps } from '../IconProps';\n\nconst InfoIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 20 20\" className={props.className} fill={props.color}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M10 1.81818C5.4839 1.81818 1.81818 5.4839 1.81818 10C1.81818 14.5161 5.4839 18.1818 10 18.1818C14.5161 18.1818 18.1818 14.5161 18.1818 10C18.1818 5.4839 14.5161 1.81818 10 1.81818ZM0 10C0 4.47974 4.47974 0 10 0C15.5203 0 20 4.47974 20 10C20 15.5203 15.5203 20 10 20C4.47974 20 0 15.5203 0 10ZM10 4.54546C9.49796 4.54546 9.09094 4.95248 9.09094 5.45455C9.09094 5.95663 9.49796 6.36364 10 6.36364C10.5021 6.36364 10.9091 5.95663 10.9091 5.45455C10.9091 4.95248 10.5021 4.54546 10 4.54546ZM10 8.18182C9.49796 8.18182 9.09094 8.58883 9.09094 9.09091V14.5455C9.09094 15.0475 9.49796 15.4545 10 15.4545C10.5021 15.4545 10.9091 15.0475 10.9091 14.5455V9.09091C10.9091 8.58883 10.5021 8.18182 10 8.18182Z\"\n      fill=\"#161616\"\n    />\n  </svg>\n);\n\nexport default InfoIcon;\n","import { IconProps } from '../IconProps';\n\nexport interface ToolTipProps {\n  size?: number;\n  direction: 'right' | 'left' | 'top' | 'bottom';\n}\n\nconst ToolTipPointerIcon = (props: IconProps & ToolTipProps) => {\n  const size = props.size || 8;\n\n  const direction = {\n    right: `M 0 0 L ${size / 2} ${size / 2} L 0 ${size}`,\n    left: `M 0 ${size} L ${size / 2} ${size / 2} L 0 0`,\n    top: `M 0 ${size / 2} L ${size / 2} 0 L ${size} ${size / 2}`,\n    bottom: `M 0 0 L ${size / 2} ${size} L ${size} 0`,\n  };\n\n  const horizontal = props.direction === 'top' || props.direction === 'bottom';\n\n  return (\n    <svg\n      viewBox={`0 0 ${horizontal ? size : size / 2} ${\n        horizontal ? size / 2 : size\n      }`}\n      className={props.className}\n      fill={props.color || '#000000'}\n    >\n      <path d={direction[props.direction]} />\n    </svg>\n  );\n};\n\nexport default ToolTipPointerIcon;\n","import { MutableRefObject, ReactElement, useEffect, useState } from 'react';\nimport ToolTipPointerIcon from '../../icons/ui/ToolTipPointerIcon';\n\nexport interface ToolTipProps {\n  target: MutableRefObject<any>;\n  pointerColor?: string;\n  pointerClass?: string;\n  offsetX?: number;\n  offsetY?: number;\n  centered?: boolean;\n  facing?: 'top' | 'bottom' | 'left' | 'right';\n  children: ReactElement;\n}\n\nconst ToolTip = (props: ToolTipProps) => {\n  const [pos, setPos] = useState({ left: 0, top: 0 });\n\n  const updatePos = () => {\n    const rect = props.target.current.getBoundingClientRect();\n\n    setPos({ left: rect.x - rect.width - 32, top: rect.y + 6 });\n  };\n\n  useEffect(() => {\n    updatePos();\n  });\n\n  return (\n    <div style={pos} className=\"fixed flex z-10\">\n      {props.children}\n      <ToolTipPointerIcon\n        color=\"#FFFFFF\"\n        className=\"h-3 mt-4\"\n        direction=\"right\"\n      />\n    </div>\n  );\n};\n\nexport default ToolTip;\n","import { MutableRefObject } from 'react';\nimport InfoIcon from '../../icons/ui/InfoIcon';\nimport { useStoreState } from '../../state/Hooks';\nimport ToolTip from '../atoms/Tooltip';\n\nexport interface GuideContainerProps {\n  target: MutableRefObject<any>;\n  children: string;\n}\n\nconst GuideContainer = (props: GuideContainerProps) => {\n  const guideStep = useStoreState((state) => state.guideStep);\n\n  return (\n    <ToolTip target={props.target}>\n      <div className=\"w-80 p-4 bg-white drop-shadow-lg rounded-lg\">\n        <div className=\"flex flex-row\">\n          <InfoIcon className=\"w-5 h-5\" color=\"#000000\"></InfoIcon>\n          <div className=\"px-3 w-full\">\n            <header className=\"pb-3 font-bold leading-5\">\n              Step {guideStep} of 3\n            </header>\n            <div className=\"font-medium text-sm text-circle-gray-500 whitespace-pre-line\">\n              {props.children}\n            </div>\n            <div className=\"w-full flex flex-row pt-2\">\n              <button className=\" ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\">\n                Dismiss\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ToolTip>\n  );\n};\n\nexport default GuideContainer;\n","import { useRef } from 'react';\nimport ComponentMapping from '../../mappings/ComponentMapping';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport ComponentInfo from '../atoms/ComponentInfo';\nimport Definition from '../atoms/Definition';\nimport {\n  InspectorDefinitionMenu,\n  InspectorDefinitionMenuNav,\n} from '../menus/definitions/InspectorDefinitionMenu';\nimport { navSubTypeMenu } from '../menus/SubTypeMenu';\nimport CollapsibleList from './CollapsibleList';\nimport GuideContainer from './GuideContainer';\n\nexport interface DefinitionsProps {\n  type: ComponentMapping;\n  expanded?: boolean;\n  onChange?: (expanded: boolean) => void;\n}\n\nconst DefinitionsContainer = (props: DefinitionsProps) => {\n  const items = useStoreState(props.type.store.get);\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const guideStep = useStoreState((state) => state.guideStep);\n  const ref = useRef(null);\n\n  return (\n    <div ref={ref} className=\"w-full p-4 pb-0\">\n      {props.type.guide && guideStep === props.type.guide.step && (\n        <GuideContainer target={ref}>{props.type.guide.info}</GuideContainer>\n      )}\n      <CollapsibleList\n        title={props.type.name.plural}\n        expanded={props.expanded}\n        onChange={props.onChange}\n        titleExpanded={\n          <button\n            onClick={() =>\n              navigateTo(\n                props.type.subtypes?.component\n                  ? navSubTypeMenu({\n                      typePage: props.type.subtypes?.component,\n                      menuPage: InspectorDefinitionMenu,\n                      menuProps: { dataType: props.type, index: -1 },\n                    })\n                  : {\n                      component: InspectorDefinitionMenuNav,\n                      props: { dataType: props.type, index: -1 },\n                    },\n              )\n            }\n            className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n          >\n            New\n          </button>\n        }\n      >\n        <div className=\"w-full pl-2 pt-2\">\n          <ComponentInfo type={props.type} />\n          {items && items.length > 0 ? (\n            items?.map((item, index) => (\n              <Definition\n                data={item}\n                key={item.name}\n                type={props.type}\n                index={index}\n              />\n            ))\n          ) : (\n            <div className=\"font-medium text-sm text-circle-gray-500\">\n              No {props.type.name.plural} found.\n            </div>\n          )}\n        </div>\n      </CollapsibleList>\n      <div className=\"w-full p-2 border-b border-circle-gray-300\"></div>\n    </div>\n  );\n};\n\nexport default DefinitionsContainer;\n","import * as CircleCI from '@circleci/circleci-config-sdk';\nimport { AnyParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport {\n  OrbImport,\n  OrbRef,\n} from '@circleci/circleci-config-sdk/dist/src/lib/Orb';\nimport { useEffect, useState } from 'react';\nimport GenerableMapping, {\n  typeToComponent,\n} from '../../../mappings/ComponentMapping';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { NavigationComponent } from '../../../state/Store';\nimport ComponentInfo from '../../atoms/ComponentInfo';\nimport Definition from '../../atoms/Definition';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport CollapsibleList from '../../containers/CollapsibleList';\n\nexport type OrbDefinitionProps = {\n  name: string;\n  namespace: string;\n  version: string;\n  logo_url: string;\n  description: string;\n  url: string;\n};\n\nconst loadOrb = (orb: string) => {\n  const endpoint =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:3030'\n      : 'https://temp-orb-manifest-endpoint.herokuapp.com';\n\n  return fetch(`${endpoint}/orbs?orb=${orb}`).then((res) => res.json());\n};\n\nconst orbDefinitions = ['jobs', 'commands', 'executors'] as Array<\n  'jobs' | 'commands' | 'executors'\n>;\n\nconst OrbDefinitionContainer = (props: {\n  dataMapping: GenerableMapping;\n  data: Record<string, OrbRef<AnyParameterLiteral>>;\n}) => {\n  return (\n    <div className=\"p-4 pt-4 pb-0\">\n      <CollapsibleList expanded title={props.dataMapping.name.plural || ''}>\n        <div className=\"p-2\">\n          <ComponentInfo type={props.dataMapping} />\n          {Object.entries(props.data).map(([name, ref]) => (\n            <Definition type={props.dataMapping} data={ref} index={-1} />\n          ))}\n        </div>\n      </CollapsibleList>\n      <div className=\"w-full p-2 border-b border-circle-gray-300\"></div>\n    </div>\n  );\n};\n\nconst OrbDefinitionsMenu = (props: OrbDefinitionProps) => {\n  const definitions = useStoreState((state) => state.definitions);\n  const importOrb = useStoreActions((actions) => actions.importOrb);\n  const [orb, setOrb] = useState<OrbImport>();\n\n  useEffect(() => {\n    loadOrb(`${props.namespace}/${props.name}@${props.version}`).then(\n      (manifest) => {\n        setOrb(\n          new CircleCI.orb.OrbImport(\n            props.name,\n            props.namespace,\n            props.name,\n            manifest,\n            props.version,\n          ),\n        );\n      },\n    );\n  }, [setOrb, props]);\n\n  const inProject = definitions.orbs.find(\n    (importedOrb) =>\n      importedOrb.namespace === orb?.namespace && importedOrb.name === orb.name,\n  );\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <header className=\"border-b border-circle-gray-300\">\n        <BreadCrumbs />\n        <div className=\"px-6 p-3\">\n          <div className=\"flex flex-row\">\n            <h2 className=\"text-circle-gray-400\">{props.version}</h2>\n            <h2 className=\"flex ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\">\n              Documentation\n            </h2>\n          </div>\n          <div className=\"flex flex-row mt-3\">\n            <img className=\"w-8 h-8 mx-1\" src={props.logo_url} alt=\"\" />\n            <h1 className=\"ml-2 text-xl font-thin text-circle-gray-500\">\n              {props.namespace}/\n            </h1>\n            <h1 className=\"text-xl\">{props.name}</h1>\n          </div>\n          <p className=\"mr-5 py-3 flex text-sm text-circle-gray-400\">\n            {props.description}\n          </p>\n          {inProject ? (\n            <button className=\"text-circle-black bg-gray-200 rounded p-2 w-full hover:border-circle-red hover:bg-red-200 border \">\n              Imported\n            </button>\n          ) : (\n            <button\n              className=\"text-circle-black bg-gray-200 rounded p-2 w-full hover:border-gray-700 border\"\n              onClick={() => {\n                if (orb) {\n                  importOrb(orb);\n                }\n              }}\n            >\n              Import\n            </button>\n          )}\n        </div>\n      </header>\n      {orb ? (\n        <div className=\"p-2\">\n          {orbDefinitions.map((component) => {\n            const mapping = typeToComponent(component);\n\n            if (mapping) {\n              return (\n                <OrbDefinitionContainer\n                  dataMapping={mapping.mapping}\n                  data={orb[component]}\n                />\n              );\n            }\n            return <p>Error</p>;\n          })}\n        </div>\n      ) : (\n        <div> </div>\n      )}\n    </div>\n  );\n};\n\nconst OrbDefinitionMenuNav: NavigationComponent = {\n  Component: OrbDefinitionsMenu,\n  Label: (props: OrbDefinitionProps) => {\n    return <p>{props.name}</p>;\n  },\n  Icon: (props: OrbDefinitionProps) => {\n    return <img className=\"w-4 h-4 mx-1\" src={props.logo_url} alt=\"\" />;\n  },\n};\n\nexport { OrbDefinitionMenuNav, OrbDefinitionsMenu };\n","import algoliasearch from 'algoliasearch/lite';\nimport {\n  Hits,\n  HitsPerPage,\n  InstantSearch,\n  PaginationProps,\n  SearchBox,\n  usePagination,\n} from 'react-instantsearch-hooks-web';\nimport { useStoreActions } from '../../../state/Hooks';\nimport { DataModel, NavigationComponent } from '../../../state/Store';\nimport Card from '../../atoms/Card';\nimport { Select } from '../../atoms/Select';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport { SubTypeMenuPageProps } from '../SubTypeMenu';\nimport TabbedMenu from '../TabbedMenu';\nimport { OrbDefinitionMenuNav, OrbDefinitionProps } from './OrbDefinitionsMenu';\n\ntype InspectorDefinitionProps = DataModel & {\n  values: Record<string, object>;\n  editing?: boolean;\n  passBackKey?: string;\n  activeTab?: number;\n} & SubTypeMenuPageProps<any>;\n\nconst searchClient = algoliasearch(\n  'U0RXNGRK45',\n  '798b0e1407310a2b54b566250592b3fd',\n);\n\nfunction Pagination(props: PaginationProps) {\n  const { pages, refine } = usePagination(props);\n\n  return (\n    <div className=\"flex flex-row mx-auto\">\n      {pages.map((page) => (\n        <button\n          className=\"w-9 h-9 border border-circle-gray-300 mx-1 rounded hover:border-gray-700\"\n          key={page}\n          onClick={() => {\n            refine(page + 1);\n          }}\n        >\n          {page + 1}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nconst OrbImportMenu = (props: InspectorDefinitionProps) => {\n  const tabs = ['EXPLORE'];\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <header>\n        <BreadCrumbs />\n        <div className=\"pl-6 pr-5 py-3 flex text-sm text-circle-gray-500\">\n          Make use of curated definitions from official or community orbs to\n          speed up your pipeline building process.\n        </div>\n      </header>\n      <TabbedMenu tabs={tabs} activeTab={props.activeTab || 0}>\n        <div className=\"p-6\">\n          <InstantSearch searchClient={searchClient} indexName=\"orbs-prod\">\n            {/* <RefinementList attribute=\"brand\" /> */}\n            <p className=\"font-bold leading-5 tracking-wide\">Search Filters</p>\n            <Select className=\"mt-2 w-full\">\n              <option>Recommended Orbs</option>\n            </Select>\n            <SearchBox\n              placeholder=\"Search Orb Directory...\"\n              classNames={{\n                form: 'my-2 rounded border border-circle-gray-300 px-2 hover:border-circle-gray-700',\n                input: 'p-2',\n                submit: 'p-2',\n              }}\n            />\n            <HitsPerPage\n              hidden\n              items={[{ value: 6, label: '', default: true }]}\n            />\n            <Hits\n              className=\"overflow-y-auto\"\n              hitComponent={({ hit, sendEvent }) => {\n                let values = hit as unknown as OrbDefinitionProps;\n\n                return (\n                  <Card\n                    truncate={140}\n                    icon={\n                      <img\n                        src={\n                          (hit.logo_url as string) ||\n                          'https://circleci.com/developer/orb-logos/community.png'\n                        }\n                        className=\"w-6 h-6 mr-2 mb-2\"\n                        alt=\"\"\n                      ></img>\n                    }\n                    pinned={\n                      <p className=\"text-circle-gray-400 text-sm\">\n                        {hit.version as string}\n                      </p>\n                    }\n                    key={hit.full_name as string}\n                    title={hit.name as string}\n                    description={hit.description as string}\n                    onClick={() => {\n                      navigateTo({\n                        component: OrbDefinitionMenuNav,\n                        props: {\n                          name: values.name,\n                          namespace: values.namespace,\n                          version: values.version,\n                          logo_url: values.logo_url,\n                          description: values.description,\n                          url: values.url,\n                        },\n                      });\n                    }}\n                  />\n                );\n              }}\n            />\n            <div className=\"flex px-auto\">\n              <Pagination padding={2}></Pagination>\n            </div>\n          </InstantSearch>\n        </div>\n        <div></div>\n      </TabbedMenu>\n    </div>\n  );\n};\n\nconst OrbImportMenuNav: NavigationComponent = {\n  Component: OrbImportMenu,\n  Label: (props: InspectorDefinitionProps) => {\n    return <p>Orbs</p>;\n  },\n  Icon: (props: InspectorDefinitionProps) => {\n    let iconComponent = props.dataType?.components.icon;\n\n    if (!iconComponent) {\n      return null;\n    }\n\n    let DefinitionIcon = iconComponent;\n\n    return <DefinitionIcon className=\"w-6 h-8 py-2\" />;\n  },\n};\n\nexport { OrbImportMenuNav, OrbImportMenu };\n","import { useRef } from 'react';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport { OrbDefinitionMenuNav } from '../menus/definitions/OrbDefinitionsMenu';\nimport { OrbImportMenuNav } from '../menus/definitions/OrbImportMenu';\nimport CollapsibleList from './CollapsibleList';\n\nexport interface OrbImportProps {\n  expanded?: boolean;\n  onChange?: (expanded: boolean) => void;\n}\n\nconst OrbImportsContainer = (props: OrbImportProps) => {\n  const items = useStoreState((state) => state.definitions.orbs);\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  // const guideStep = useStoreState((state) => state.guideStep);\n  const ref = useRef(null);\n\n  return (\n    <div ref={ref} className=\"w-full p-4 pb-0\">\n      <CollapsibleList\n        title=\"Orbs\"\n        expanded={props.expanded}\n        onChange={props.onChange}\n        titleExpanded={\n          <button\n            onClick={() => {\n              navigateTo({\n                component: OrbImportMenuNav,\n                props: {},\n              });\n            }}\n            className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n          >\n            Import\n          </button>\n        }\n      >\n        <div className=\"w-full pl-2 pt-2\">\n          {/* <ComponentInfo type={props.type} /> */}\n          {items && items.length > 0 ? (\n            items.map((orb) => (\n              <button\n                className=\"w-full mb-2 p-2 text-sm cursor-pointer text-left text-circle-black \n      bg-white border border-circle-gray-300 rounded-md2 flex flex-row\"\n                onClick={() => {\n                  navigateTo({\n                    component: OrbDefinitionMenuNav,\n                    props: {\n                      name: orb.name,\n                      namespace: orb.namespace,\n                      version: orb.version,\n                      description: orb.description,\n                    },\n                  });\n                }}\n              >\n                <p className=\"text-circle-gray-400\">{orb.namespace}/</p>\n                {orb.name}\n                <div className=\"ml-auto text-circle-gray-400\">\n                  {orb.version}\n                </div>\n              </button>\n            ))\n          ) : (\n            <div className=\"font-medium text-sm text-circle-gray-500\">\n              No orbs imported.\n            </div>\n          )}\n        </div>\n      </CollapsibleList>\n      <div className=\"w-full p-2 border-b border-circle-gray-300\"></div>\n    </div>\n  );\n};\n\nexport default OrbImportsContainer;\n","import { Form, Formik } from 'formik';\nimport React from 'react';\nimport WorkflowIcon from '../../../icons/components/WorkflowIcon';\nimport { dataMappings } from '../../../mappings/ComponentMapping';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { NavigationComponent } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport DefinitionsContainer from '../../containers/DefinitionsContainer';\nimport OrbImportsContainer from '../../containers/OrbImportsContainer';\nimport Toast from '../../atoms/Toast';\nimport TabbedMenu from '../TabbedMenu';\n\n/**\n * @see\n * @returns\n */\n\nconst DefinitionsMenu = (props: { expanded: boolean[] }) => {\n  /* TODO: DETERMINE PARAMETERS\n  const parameters = useStoreState((state) => state.parameters); \n  const defineParameter = useStoreActions((actions) => actions.defineParameter); */\n  // const generateConfig = useStoreActions((actions) => actions.generateConfig);\n  const workflowGraphs = useStoreState((state) => state.workflows);\n  const selectedWorkflow = useStoreState((state) => state.selectedWorkflow);\n  const updateConfig = useStoreActions((actions) => actions.generateConfig);\n  const persistProps = useStoreActions((actions) => actions.persistProps);\n  const workflow = workflowGraphs[selectedWorkflow];\n\n  return (\n    <div className=\"h-full bg-white flex flex-col overflow-y-auto\">\n      <header className=\"ml-4 mb-4 flex\">\n        <WorkflowIcon className=\"w-8 h-8 p-1 mr-1\" />\n        <h1 className=\"text-2xl font-bold\">{workflow.name}</h1>\n      </header>\n\n      <TabbedMenu tabs={['DEFINITIONS', 'PROPERTIES']}>\n        <div className=\"p-2 flex-1 h-full w-full flex-col\">\n          <OrbImportsContainer></OrbImportsContainer>\n          {dataMappings.map((mapping, index) => {\n            const dataType = mapping.mapping;\n\n            return (\n              <DefinitionsContainer\n                type={dataType}\n                expanded={props.expanded[index]}\n                onChange={(isExpanded) => {\n                  persistProps({\n                    ...props,\n                    expanded: props.expanded.map((expanded, i) =>\n                      i === index ? isExpanded : expanded,\n                    ),\n                  });\n                }}\n                key={dataType.name.plural}\n              />\n            );\n          })}\n        </div>\n        <div className=\"p-6\">\n          <Formik\n            initialValues={{ name: workflow.name }}\n            enableReinitialize\n            onSubmit={(values) => {}}\n          >\n            {(formikProps) => (\n              <Form className=\"flex flex-col flex-1\">\n                <InspectorProperty label=\"Name\" name=\"name\" />\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </TabbedMenu>\n      <Toast />\n      <span className=\"border-b border-circle-gray-300\" />\n      <button\n        className=\"text-white text-sm font-medium p-2 m-6 bg-circle-blue duration:50 transition-all rounded-md2\"\n        onClick={(e) => updateConfig()}\n      >\n        Generate Config\n      </button>\n    </div>\n  );\n};\n\nconst DefinitionsMenuNav: NavigationComponent = {\n  Component: DefinitionsMenu,\n  Label: (props: { expanded: boolean[] }) => <p>Definitions</p>,\n};\n\nexport default DefinitionsMenuNav;\n","import {\n  Config,\n  Job,\n  parameters,\n  parsers,\n  reusable,\n  Workflow,\n  workflow,\n} from '@circleci/circleci-config-sdk';\nimport { CustomCommand } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Commands/exports/Reusable';\nimport { CustomParameter } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters';\nimport { PipelineParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport { WorkflowJobAbstract } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow';\nimport { OrbImport } from '@circleci/circleci-config-sdk/dist/src/lib/Orb';\nimport { Action, action } from 'easy-peasy';\nimport { MutableRefObject } from 'react';\nimport {\n  ElementId,\n  Elements,\n  FlowElement,\n  isNode,\n  Node,\n  SetConnectionId,\n  XYPosition,\n} from 'react-flow-renderer';\nimport { v4 } from 'uuid';\nimport DefinitionsMenu from '../components/menus/definitions/DefinitionsMenu';\nimport ComponentMapping from '../mappings/ComponentMapping';\nimport JobMapping from '../mappings/JobMapping';\n\nexport interface NavigationBack {\n  distance?: number;\n  apply?: (values: any) => any;\n  toast?: ToastModel;\n}\n\nexport interface ToastModel {\n  label: string;\n  content: string;\n  status: 'success' | 'failed' | 'warning';\n}\n\nexport interface WorkflowModel {\n  name: string;\n  id: string;\n  /*\n   * the main thing being updated. every time we want to change an element in this array\n   */\n  elements: Elements<any>;\n}\n\nexport interface PreviewToolboxModel {\n  filter: {\n    type: 'branches' | 'tags';\n    pattern: string;\n    preview: boolean;\n  };\n}\n\n/** Reusable definitions of CircleCIConfigObject */\nexport interface DefinitionModel /*extends CircleCIConfigObject*/ {\n  parameters: CustomParameter<PipelineParameterLiteral>[];\n  executors: reusable.ReusableExecutor[];\n  jobs: Job[];\n  commands: CustomCommand[];\n  workflows: Workflow[];\n  orbs: OrbImport[];\n}\n\nexport interface DataModel {\n  data?: any;\n  dataType?: ComponentMapping;\n}\n\nexport interface NavigationModel extends NavigationStop {\n  jumpedFrom?: NavigationStop;\n  from?: NavigationModel;\n}\n\nexport interface NavigationComponent {\n  Icon?: React.FunctionComponent<any>;\n  Component: React.FunctionComponent<any>;\n  Label: React.FunctionComponent<any>;\n}\n\nexport interface NavigationStop {\n  component: NavigationComponent;\n  props: { [key: string]: any };\n  origin?: boolean;\n}\n\nexport interface StagedJobMap {\n  workflows: {\n    [workflow: string]: {\n      [job: string]: number;\n    };\n  };\n}\n\nexport interface StoreModel {\n  /** Last generated configuration */\n  config: string | undefined;\n  /** The configuration with proposed changes */\n  editingConfig: string | undefined;\n  /** Component definitions which are used to generate the configuration*/\n  definitions: DefinitionModel;\n  /** The current step of the guide */\n  guideStep?: number;\n  /** Node placeholder element info */\n  placeholder?: { index: number; id: string };\n  /** Map to staged workflow jobs, to save on time-space complexity */\n  stagedJobs: StagedJobMap;\n  /** Array of workflow panes */\n  workflows: WorkflowModel[];\n  /** Allows for tracking of components and their props in NavigationPanel */\n  navigation: NavigationModel;\n  /** Staged Job Preview Toolbox state  */\n  previewToolbox: PreviewToolboxModel;\n\n  toast?: ToastModel;\n  /** Data being dragged from definition */\n  dragging?: DataModel;\n  altAction?: boolean;\n  connecting?: {\n    intent: 'creating' | 'deleting';\n    start?: {\n      ref?: MutableRefObject<any>;\n      id: SetConnectionId;\n      name?: string;\n    };\n    end?: {\n      id: SetConnectionId;\n      pos?: XYPosition;\n      ref?: MutableRefObject<any>;\n      name?: string;\n    };\n  };\n  /** Currently selected workflow pane index */\n  selectedWorkflow: number;\n  errorMessage?: string;\n}\n\nexport interface UpdateType<T> {\n  old: T;\n  new: T;\n}\n\nexport interface StoreActions {\n  persistProps: Action<StoreModel, { [key: string]: object }>;\n  setDragging: Action<StoreModel, DataModel | undefined>;\n  setConnecting: Action<\n    StoreModel,\n    {\n      ref?: MutableRefObject<any>;\n      id: SetConnectionId;\n      name?: string;\n    }\n  >;\n  setAltAction: Action<StoreModel, boolean>;\n  updateConnecting: Action<\n    StoreModel,\n    | {\n        ref?: MutableRefObject<any>;\n        id: SetConnectionId;\n        pos?: XYPosition;\n        name?: string;\n      }\n    | undefined\n  >;\n\n  setPlaceholder: Action<StoreModel, Node<any>>;\n  setGuideStep: Action<StoreModel, number | undefined>;\n\n  navigateTo: Action<StoreModel, NavigationStop & { values?: any }>;\n  navigateBack: Action<StoreModel, NavigationBack | void>;\n\n  addWorkflow: Action<StoreModel, string>;\n  selectWorkflow: Action<StoreModel, number>;\n  removeWorkflow: Action<StoreModel, WorkflowModel>;\n\n  addWorkflowElement: Action<StoreModel, FlowElement<any>>;\n  removeWorkflowElement: Action<StoreModel, string>;\n  setWorkflowElements: Action<StoreModel, Elements<any>>;\n\n  defineJob: Action<StoreModel, Job>;\n  updateJob: Action<StoreModel, UpdateType<Job>>;\n  undefineJob: Action<StoreModel, Job>;\n\n  defineCommand: Action<StoreModel, CustomCommand>;\n  updateCommand: Action<StoreModel, UpdateType<CustomCommand>>;\n  undefineCommand: Action<StoreModel, CustomCommand>;\n\n  defineExecutor: Action<StoreModel, reusable.ReusableExecutor>;\n  updateExecutor: Action<StoreModel, UpdateType<reusable.ReusableExecutor>>;\n  undefineExecutor: Action<StoreModel, reusable.ReusableExecutor>;\n\n  defineParameter: Action<\n    StoreModel,\n    CustomParameter<PipelineParameterLiteral>\n  >;\n  updateParameter: Action<\n    StoreModel,\n    UpdateType<CustomParameter<PipelineParameterLiteral>>\n  >;\n  undefineParameter: Action<\n    StoreModel,\n    CustomParameter<PipelineParameterLiteral>\n  >;\n\n  importOrb: Action<StoreModel, OrbImport>;\n  unimportOrb: Action<StoreModel, OrbImport>;\n\n  loadConfig: Action<StoreModel, string>;\n  generateConfig: Action<StoreModel, void | Partial<DefinitionModel>>;\n  error: Action<StoreModel, any>;\n\n  updatePreviewToolBox: Action<StoreModel, PreviewToolboxModel>;\n  clearToast: Action<StoreModel, void>;\n}\n\nconst Actions: StoreActions = {\n  persistProps: action((state, payload) => {\n    state.navigation = { ...state.navigation, props: payload };\n  }),\n  setAltAction: action((state, payload) => {\n    state.altAction = payload;\n  }),\n  setConnecting: action((state, payload) => {\n    if (payload.ref) {\n      state.connecting = {\n        intent: state.altAction ? 'deleting' : 'creating',\n        start: payload,\n      };\n    } else {\n      state.connecting = undefined;\n    }\n  }),\n  updateConnecting: action((state, payload) => {\n    if (state.connecting?.start) {\n      state.connecting = {\n        ...state.connecting,\n        end: payload,\n      };\n    }\n  }),\n  setPlaceholder: action((state, payload) => {\n    const workflow = state.workflows[state.selectedWorkflow];\n    if (state.placeholder /** && payload.overwrite */) {\n      state.workflows[state.selectedWorkflow] = {\n        ...workflow,\n        elements: workflow.elements.map((element) =>\n          element.id === state.placeholder?.id ? payload : element,\n        ),\n      };\n    } else {\n      workflow.elements.push(payload);\n    }\n\n    state.placeholder = {\n      index: workflow.elements.length - 1,\n      id: workflow.id,\n    };\n  }),\n  setGuideStep: action((state, payload) => {\n    state.guideStep = payload;\n  }),\n\n  navigateTo: action((state, payload) => {\n    const curNav = state.navigation;\n\n    if (curNav.jumpedFrom) {\n      state.navigation.jumpedFrom = undefined;\n    }\n\n    let root = curNav.from;\n\n    while (root?.from !== undefined) {\n      root = root.from;\n    }\n\n    state.navigation = {\n      ...payload,\n      from:\n        payload.origin && root\n          ? root\n          : {\n              ...curNav,\n              props: { ...curNav.props, values: payload.values },\n            },\n    };\n  }),\n\n  navigateBack: action((state, payload) => {\n    const distance = payload?.distance || 1;\n\n    if (state.navigation.from) {\n      let travelTo = state.navigation;\n\n      for (let i = 0; i < distance; i++) {\n        if (travelTo.from) {\n          travelTo = travelTo.from;\n        } else {\n          throw new Error('Tried to navigate back to an undefined component!');\n        }\n      }\n\n      const values =\n        payload?.apply?.(travelTo.props.values) || travelTo.props.values;\n      let props;\n\n      /**\n       * Solution for modifying props on sub menus.\n       */\n      if (travelTo.props?.menuProps) {\n        props = {\n          ...travelTo.props,\n          menuProps: {\n            ...travelTo.props.menuProps,\n            values: values,\n          },\n        };\n      } else {\n        props = {\n          ...travelTo.props,\n          values: values,\n        };\n      }\n\n      state.navigation = {\n        ...travelTo,\n        props: props,\n        jumpedFrom: distance > 1 ? state.navigation : undefined,\n      };\n    } else {\n      state.navigation = { component: DefinitionsMenu, props: {} };\n    }\n\n    state.toast = payload?.toast;\n  }),\n\n  setDragging: action((state, payload) => {\n    state.dragging = payload;\n  }),\n\n  addWorkflow: action((state, name) => {\n    state.workflows = state.workflows.concat({\n      name,\n      id: v4(),\n      elements: [],\n    });\n    state.stagedJobs = { ...state.stagedJobs };\n  }),\n  selectWorkflow: action((state, index) => {\n    state.selectedWorkflow = index;\n  }),\n  removeWorkflow: action((state, payload) => {\n    state.workflows = state.workflows.filter(\n      (workflow) => workflow.id !== payload.id,\n    );\n  }),\n\n  addWorkflowElement: action((state, payload) => {\n    const workflow = state.workflows[state.selectedWorkflow];\n\n    if (payload.type === 'jobs') {\n      const jobData = payload.data as WorkflowJobAbstract;\n      const jobName = jobData.name;\n      const stagedJobs = state.stagedJobs.workflows;\n      let curWorkflow = stagedJobs[workflow.name];\n\n      if (workflow.name in state.stagedJobs.workflows) {\n        if (!curWorkflow[jobName]) {\n          curWorkflow[jobName] = 1;\n        } else {\n          curWorkflow[jobName]++;\n        }\n      } else {\n        stagedJobs[workflow.name] = { [jobName]: 1 };\n      }\n\n      state.stagedJobs = { workflows: stagedJobs };\n    }\n\n    // Not sure why this mutable update causes the workflow pane to refresh, but it does.\n    workflow.elements.push(payload);\n  }),\n  removeWorkflowElement: action((state, payload) => {\n    const workflow = state.workflows[state.selectedWorkflow];\n    const map = state.stagedJobs;\n    const stagedJob = map.workflows[workflow.name];\n\n    state.workflows[state.selectedWorkflow] = {\n      ...workflow,\n      elements: workflow.elements.filter((element, i) => {\n        const filtered = element.id === payload;\n\n        if (filtered) {\n          if (element.type === 'jobs') {\n            const workflowJob = element.data as WorkflowJobAbstract;\n            const name = workflowJob.name;\n            const sameSourceJobs = stagedJob[name];\n\n            if (sameSourceJobs) {\n              stagedJob[name]--;\n\n              if (stagedJob[name] === 0) {\n                delete stagedJob[name];\n              }\n\n              state.stagedJobs = { workflows: map.workflows };\n            }\n          }\n        }\n\n        // TODO: determine if there are any more of the same job type in the workflow.\n        // Requires name duplication to be fully logical\n        return !filtered;\n      }),\n    };\n  }),\n  setWorkflowElements: action((state, payload) => {\n    state.workflows[state.selectedWorkflow].elements = payload;\n  }),\n\n  defineJob: action((state, payload) => {\n    state.definitions.jobs?.push(payload);\n  }),\n  updateJob: action((state, payload) => {\n    if (state.definitions.jobs) {\n      const workflows = state.workflows[state.selectedWorkflow];\n\n      workflows.elements = workflows.elements.map((e) =>\n        isNode(e) && e.type === 'job' && e.data.job.name === payload.old.name\n          ? { ...e, data: { ...e.data, job: payload.new } }\n          : e,\n      );\n\n      state.definitions.jobs = state.definitions.jobs.map((job) =>\n        job.name === payload.old.name ? payload.new : job,\n      );\n    }\n  }),\n  undefineJob: action((state, payload) => {\n    state.definitions.jobs = state.definitions.jobs?.filter(\n      (job) => job.name === payload.name,\n    );\n  }),\n\n  defineExecutor: action((state, payload) => {\n    state.definitions.executors = state.definitions.executors?.concat(payload);\n  }),\n  updateExecutor: action((state, payload) => {\n    state.definitions.executors = state.definitions.executors?.map((executor) =>\n      executor.name === payload.old.name ? payload.new : executor,\n    );\n  }),\n  undefineExecutor: action((state, payload) => {\n    state.definitions.executors?.filter(\n      (executor) => executor.name !== payload.name,\n    );\n  }),\n\n  defineParameter: action((state, payload) => {\n    state.definitions.parameters =\n      state.definitions.parameters?.concat(payload);\n  }),\n  updateParameter: action((state, payload) => {}),\n  undefineParameter: action((state, payload) => {\n    state.definitions.parameters?.filter(\n      (parameter) => parameter.name !== payload.name,\n    );\n  }),\n\n  defineCommand: action((state, payload) => {\n    state.definitions.commands = state.definitions.commands?.concat(payload);\n  }),\n  updateCommand: action((state, payload) => {}),\n  undefineCommand: action((state, payload) => {\n    state.definitions.commands?.filter(\n      (command) => command.name !== payload.name,\n    );\n  }),\n\n  importOrb: action((state, payload) => {\n    const isImported = state.definitions.orbs.find(\n      (orb) => orb.name === payload.name && orb.namespace === payload.namespace,\n    );\n\n    if (!isImported) {\n      state.definitions.orbs?.push(payload);\n    }\n  }),\n\n  unimportOrb: action((state, payload) => {\n    state.definitions.orbs = state.definitions.orbs.filter(\n      (orb) => orb.name !== payload.name && orb.namespace !== payload.namespace,\n    );\n  }),\n\n  error: action((state, payload) => {\n    console.error('An action was not found! ', payload);\n  }),\n\n  loadConfig: action((state, payload) => {\n    try {\n      const config = parsers.parseConfig(payload);\n\n      state.definitions = {\n        workflows: config.workflows,\n        jobs: config.jobs,\n        executors: config.executors || [],\n        parameters: config.parameters?.parameters || [],\n        commands: config.commands || [],\n        orbs: config.orbs || [],\n      };\n\n      const nodeWidth = 250; // Make this dynamic\n      const nodeHeight = 60; // Make this dynamic\n\n      const getJobName = (workflowJob: workflow.WorkflowJobAbstract) => {\n        const baseName =\n          workflowJob instanceof workflow.WorkflowJob\n            ? workflowJob.job.name\n            : (workflowJob as workflow.WorkflowJobApproval).name;\n\n        return workflowJob.parameters?.name || baseName;\n      };\n\n      const workflowJobCounts: Record<string, Record<string, number>> = {};\n      state.workflows = config.workflows.map(({ name, jobs }) => {\n        const sourceJobCounts: Record<string, number> = {};\n        const jobTable: Record<string, workflow.WorkflowJobAbstract> = {};\n        const requiredJobs: Record<string, boolean> = {};\n\n        jobs.forEach((workflowJob) => {\n          const jobName = getJobName(workflowJob);\n          jobTable[jobName] = workflowJob;\n\n          if (workflowJob instanceof workflow.WorkflowJob) {\n            const sourceJobName = workflowJob.job.name;\n\n            if (sourceJobCounts[sourceJobName] > 0) {\n              sourceJobCounts[sourceJobName]++;\n            } else {\n              sourceJobCounts[sourceJobName] = 1;\n            }\n          }\n\n          workflowJob.parameters?.requires?.forEach((requiredJob) => {\n            requiredJobs[requiredJob] = true;\n          });\n        });\n\n        workflowJobCounts[name] = sourceJobCounts;\n\n        // Filter down to jobs that are not required by other jobs\n        const endJobs = jobs.filter(\n          (workflowJob) => !(getJobName(workflowJob) in requiredJobs),\n        );\n\n        type JobNodeProps = { col: number; row: number };\n        const elements: Elements = [];\n        const columns: Array<number> = [];\n        const solved: Record<ElementId, JobNodeProps> = {};\n\n        const solve = (workflowJob: workflow.WorkflowJobAbstract) => {\n          const jobName = getJobName(workflowJob);\n\n          if (solved[jobName] !== undefined) {\n            return solved[jobName];\n          }\n\n          const props: JobNodeProps = { col: 0, row: 0 };\n\n          if (workflowJob.parameters?.requires) {\n            let greatestColumn = 0;\n            let greatestRow = 0;\n\n            workflowJob.parameters.requires.forEach((requiredJob) => {\n              let requiredJobProps;\n\n              if (solved[requiredJob] === undefined) {\n                requiredJobProps = solve(jobTable[requiredJob]);\n              } else {\n                requiredJobProps = solved[requiredJob];\n              }\n\n              greatestRow = Math.max(greatestRow, requiredJobProps.row);\n              greatestColumn = Math.max(greatestColumn, requiredJobProps.col);\n\n              // add connection line\n              elements.push({\n                id: v4(),\n                source: requiredJob,\n                target: jobName,\n                type: 'requires',\n                sourceHandle: `${requiredJob}_source`,\n                targetHandle: `${jobName}_target`,\n                animated: false,\n                style: { stroke: '#A3A3A3', strokeWidth: '2px' },\n              });\n            });\n\n            props.col = greatestColumn + 1;\n            props.row = greatestRow;\n          }\n\n          if (columns.length > props.col) {\n            columns[props.col]++;\n          } else {\n            columns.push(1);\n          }\n\n          // assign job to most recent requirement\n          props.row = Math.max(columns[props.col], props.row);\n\n          // add job node\n          elements.push({\n            id: jobName,\n            data: workflowJob,\n            connectable: true,\n            dragHandle: '.node',\n            type: 'jobs',\n            position: { x: props.col * nodeWidth, y: props.row * nodeHeight },\n          });\n\n          solved[jobName] = props;\n\n          return props;\n        };\n\n        // Build workflow and prep requirement connection generation\n        endJobs.forEach((workflowJob) => {\n          solve(workflowJob);\n        });\n\n        return {\n          name,\n          id: v4(),\n          elements,\n        };\n      });\n\n      state.stagedJobs = { workflows: workflowJobCounts };\n      state.config = config.generate();\n    } catch (exception) {\n      if (!(exception instanceof Error)) {\n        state.errorMessage = `Caught unhandled exception:\\n ${exception}`;\n        return;\n      }\n\n      let error = exception as Error;\n      state.errorMessage = error.message;\n\n      console.error(error);\n    }\n  }),\n  generateConfig: action((state, payload) => {\n    const workflows = state.workflows.map((flow) => {\n      const jobs = flow.elements\n        .filter((element) => element.type === JobMapping.type)\n        .map((element) => element.data);\n\n      return new Workflow(flow.name, jobs);\n    });\n\n    const defs = state.definitions;\n    // This is a merged config preview. TODO: Refactor merging process.\n    const merge = (cur: any, update: any) =>\n      update ? [...cur, ...update] : cur;\n    const pipelineParameters: parameters.CustomParameter<PipelineParameterLiteral>[] =\n      merge(defs.parameters, payload?.parameters);\n    const parameterList =\n      pipelineParameters.length > 0\n        ? new parameters.CustomParametersList<PipelineParameterLiteral>(\n            pipelineParameters,\n          )\n        : undefined;\n\n    const config = new Config(\n      false,\n      merge(defs.jobs, payload?.jobs),\n      workflows,\n      merge(defs.executors, payload?.executors),\n      merge(defs.commands, payload?.commands),\n      parameterList,\n      merge(defs.orbs, payload?.orbs),\n    );\n\n    if (payload) {\n      state.editingConfig = config.generate();\n    } else {\n      state.config = config.generate();\n      state.editingConfig = undefined;\n    }\n  }),\n\n  updatePreviewToolBox: action((state, payload) => {\n    state.previewToolbox = payload;\n  }),\n  clearToast: action((state) => {\n    state.toast = undefined;\n  }),\n};\n\nconst Store: StoreModel & StoreActions = {\n  selectedWorkflow: 0,\n  editingConfig: undefined,\n  config: undefined,\n  guideStep: 1,\n  navigation: {\n    component: DefinitionsMenu,\n    props: { expanded: [true, true, false, false] },\n  },\n  previewToolbox: {\n    filter: {\n      type: 'branches',\n      pattern: '',\n      preview: false,\n    },\n  },\n  definitions: {\n    commands: [],\n    executors: [],\n    jobs: [],\n    workflows: [],\n    parameters: [],\n    orbs: [],\n  },\n  stagedJobs: {\n    workflows: {\n      'build-and-test': {},\n    },\n  },\n  workflows: [\n    {\n      name: 'build-and-test',\n      elements: [],\n      id: v4(),\n    },\n  ],\n  ...Actions,\n};\n\nexport default Store;\n","import { createStore, StoreProvider } from 'easy-peasy';\nimport EditorPane from './components/panes/EditorPane';\nimport NavigationPane from './components/panes/NavigationPane';\nimport WorkflowsPane from './components/panes/WorkflowsPane';\nimport useWindowDimensions from './state/Hooks';\nimport Store from './state/Store';\n\nconst store = createStore(Store);\n\nconst App = () => {\n  const inspectorWidth = 320;\n  const appWidth = useWindowDimensions();\n\n  return (\n    <StoreProvider store={store}>\n      <section className=\"flex flex-row h-full\">\n        <section\n          className=\"flex flex-col flex-nowrap flex-1\"\n          style={{ width: appWidth.width - inspectorWidth }}\n        >\n          <WorkflowsPane />\n          <EditorPane />\n        </section>\n        <NavigationPane width={inspectorWidth} />\n      </section>\n    </StoreProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}